command: find . -name "*.php" -type f | grep -v -E "(backup|old|OLD|MONOLITH|debug|test|-new\.php|single-accommodation-clean\.php|single-accommodation\.php)" | sort | while read file; do echo "=== FILE: $file ==="; cat "$file"; echo -e "\n\n"; done > core_php_files.txt && echo "Core PHP files opgeslagen in core_php_files.txt"


=== FILE: ./includes/class-zzbp-activator.php ===
<?php
/**
 * ZeeZicht Booking Pro - Activator
 * 
 * Handles plugin activation and deactivation.
 * Follows Single Responsibility Principle.
 * 
 * @package ZeeZichtBookingPro
 * @subpackage Activator
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Activator {
    
    /**
     * Plugin activation
     */
    public static function activate() {
        // Create default settings
        self::create_default_settings();
        
        // Create default property info
        self::create_default_property_info();
        
        // Add rewrite rules and flush
        self::setup_rewrite_rules();
        
        // Create database tables if needed
        self::create_database_tables();
        
        // Set activation flag
        update_option('zzbp_activated', true);
        
        error_log('ZZBP: Plugin activated successfully');
    }
    
    /**
     * Plugin deactivation
     */
    public static function deactivate() {
        // Flush rewrite rules
        flush_rewrite_rules();
        
        // Clear any scheduled events
        wp_clear_scheduled_hook('zzbp_daily_cleanup');
        
        // Remove activation flag
        delete_option('zzbp_activated');
        
        error_log('ZZBP: Plugin deactivated');
    }
    
    /**
     * Plugin uninstall (called from uninstall.php)
     */
    public static function uninstall() {
        // Remove all plugin options
        delete_option('zzbp_settings');
        delete_option('zzbp_property_info');
        delete_option('zzbp_activated');
        delete_option('zzbp_version');
        
        // Drop custom database tables if any
        self::drop_database_tables();
        
        // Clear any cached data
        wp_cache_flush();
        
        error_log('ZZBP: Plugin uninstalled and cleaned up');
    }
    
    /**
     * Create default settings
     */
    private static function create_default_settings() {
        $default_settings = array(
            'api_base_url' => 'http://localhost:2121/api',
            'api_key' => '',
            'property_name' => 'My Property',
            'contact_email' => get_option('admin_email'),
            'contact_phone' => '',
            'currency' => 'EUR',
            'date_format' => 'Y-m-d',
            'timezone' => get_option('timezone_string') ?: 'Europe/Amsterdam'
        );
        
        add_option('zzbp_settings', $default_settings);
    }
    
    /**
     * Create default property info
     */
    private static function create_default_property_info() {
        $default_property_info = array(
            'url_structure' => array(
                'base' => 'accommodations'
            ),
            'settings' => array(
                'business' => array(
                    'name' => 'ZeeZicht Media',
                    'phone' => '+31 123 456 789',
                    'email' => get_option('admin_email')
                )
            )
        );
        
        add_option('zzbp_property_info', $default_property_info);
    }
    
    /**
     * Setup rewrite rules
     */
    private static function setup_rewrite_rules() {
        // Add rewrite rules for accommodations
        add_rewrite_rule(
            '^accommodations/([^/]+)/?$',
            'index.php?zzbp_accommodation_slug=$matches[1]',
            'top'
        );
        
        // Flush rewrite rules
        flush_rewrite_rules();
    }
    
    /**
     * Create database tables if needed
     */
    private static function create_database_tables() {
        global $wpdb;
        
        // Example: Create a bookings cache table
        $table_name = $wpdb->prefix . 'zzbp_bookings_cache';
        
        $charset_collate = $wpdb->get_charset_collate();
        
        $sql = "CREATE TABLE $table_name (
            id mediumint(9) NOT NULL AUTO_INCREMENT,
            booking_id varchar(100) NOT NULL,
            accommodation_id varchar(100) NOT NULL,
            check_in date NOT NULL,
            check_out date NOT NULL,
            guest_name varchar(255) NOT NULL,
            guest_email varchar(255) NOT NULL,
            status varchar(50) DEFAULT 'pending',
            created_at datetime DEFAULT CURRENT_TIMESTAMP,
            updated_at datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
            PRIMARY KEY (id),
            UNIQUE KEY booking_id (booking_id),
            KEY accommodation_id (accommodation_id),
            KEY check_in (check_in),
            KEY status (status)
        ) $charset_collate;";
        
        require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
        dbDelta($sql);
        
        // Store database version
        update_option('zzbp_db_version', '1.0');
    }
    
    /**
     * Drop database tables
     */
    private static function drop_database_tables() {
        global $wpdb;
        
        $table_name = $wpdb->prefix . 'zzbp_bookings_cache';
        $wpdb->query("DROP TABLE IF EXISTS $table_name");
        
        delete_option('zzbp_db_version');
    }
    
    /**
     * Check if plugin needs update
     */
    public static function check_version() {
        $installed_version = get_option('zzbp_version');
        
        if ($installed_version !== ZZBP_VERSION) {
            self::update_plugin($installed_version);
            update_option('zzbp_version', ZZBP_VERSION);
        }
    }
    
    /**
     * Update plugin from old version
     */
    private static function update_plugin($old_version) {
        error_log("ZZBP: Updating from version {$old_version} to " . ZZBP_VERSION);
        
        // Version-specific updates
        if (version_compare($old_version, '1.0', '<')) {
            // Update from pre-1.0 versions
            self::update_to_v1_0();
        }
        
        // Always flush rewrite rules on update
        flush_rewrite_rules();
    }
    
    /**
     * Update to version 1.0
     */
    private static function update_to_v1_0() {
        // Migrate old settings format if needed
        $old_settings = get_option('zzbp_old_settings');
        if ($old_settings) {
            $new_settings = array(
                'api_base_url' => $old_settings['api_url'] ?? 'http://localhost:2121/api',
                'api_key' => $old_settings['key'] ?? '',
                'property_name' => $old_settings['name'] ?? 'My Property'
            );
            
            update_option('zzbp_settings', $new_settings);
            delete_option('zzbp_old_settings');
        }
    }
}



=== FILE: ./includes/class-zzbp-admin.php ===
<?php
/**
 * ZeeZicht Booking Pro - Admin Handler
 * 
 * Handles all admin functionality for the plugin.
 * Follows Single Responsibility Principle.
 * 
 * @package ZeeZichtBookingPro
 * @subpackage Admin
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Admin {
    
    /**
     * Initialize admin functionality
     */
    public function __construct() {
        add_action('admin_menu', array($this, 'add_admin_menu'));
        add_action('admin_init', array($this, 'register_settings'));
        add_action('admin_enqueue_scripts', array($this, 'enqueue_admin_assets'));
    }
    
    /**
     * Add admin menu pages
     */
    public function add_admin_menu() {
        // Main menu page
        add_menu_page(
            'ZeeZicht Booking Pro',
            'Booking Pro',
            'manage_options',
            'zzbp-dashboard',
            array($this, 'dashboard_page'),
            'dashicons-calendar-alt',
            30
        );
        
        // Settings submenu
        add_submenu_page(
            'zzbp-dashboard',
            'Settings',
            'Settings',
            'manage_options',
            'zzbp-settings',
            array($this, 'settings_page')
        );
        
        // Accommodations submenu (read-only view)
        add_submenu_page(
            'zzbp-dashboard',
            'Accommodations',
            'Accommodations',
            'manage_options',
            'zzbp-accommodations',
            array($this, 'accommodations_page')
        );
        
        // Link to SaaS Dashboard submenu
        add_submenu_page(
            'zzbp-dashboard',
            'Manage Bookings',
            'Manage Bookings →',
            'manage_options',
            'zzbp-saas-link',
            array($this, 'saas_redirect_page')
        );
    }
    
    /**
     * Register plugin settings
     */
    public function register_settings() {
        register_setting('zzbp_settings_group', 'zzbp_settings', array(
            'sanitize_callback' => array($this, 'sanitize_settings')
        ));
        
        // API Settings Section
        add_settings_section(
            'zzbp_api_section',
            'API Settings',
            array($this, 'api_section_callback'),
            'zzbp-settings'
        );
        
        add_settings_field(
            'api_base_url',
            'API Base URL',
            array($this, 'api_base_url_callback'),
            'zzbp-settings',
            'zzbp_api_section'
        );
        
        add_settings_field(
            'api_key',
            'API Key',
            array($this, 'api_key_callback'),
            'zzbp-settings',
            'zzbp_api_section'
        );
        
        // Property Information Section (Read-only)
        add_settings_section(
            'zzbp_property_section',
            'Property Information',
            array($this, 'property_section_callback'),
            'zzbp-settings'
        );
    }
    
    /**
     * Enqueue admin assets
     */
    public function enqueue_admin_assets($hook) {
        // Only load on our admin pages
        if (strpos($hook, 'zzbp-') === false) {
            return;
        }
        
        wp_enqueue_style(
            'zzbp-admin-style',
            plugin_dir_url(ZZBP_PLUGIN_FILE) . 'assets/css/admin.css',
            array(),
            ZZBP_VERSION
        );
        
        wp_enqueue_script(
            'zzbp-admin-script',
            plugin_dir_url(ZZBP_PLUGIN_FILE) . 'assets/js/admin.js',
            array('jquery'),
            ZZBP_VERSION,
            true
        );
        
        wp_localize_script('zzbp-admin-script', 'zzbp_admin_ajax', array(
            'ajax_url' => admin_url('admin-ajax.php'),
            'nonce' => wp_create_nonce('zzbp_nonce')
        ));
    }
    
    /**
     * Dashboard page
     */
    public function dashboard_page() {
        ?>
        <div class="wrap">
            <h1>ZeeZicht Booking Pro Dashboard</h1>
            
            <div class="zzbp-dashboard-widgets">
                <div class="zzbp-widget">
                    <h3>Recent Bookings</h3>
                    <p>Overview of recent bookings will be displayed here.</p>
                </div>
                
                <div class="zzbp-widget">
                    <h3>API Status</h3>
                    <div id="zzbp-api-status">
                        <button type="button" class="button" onclick="testApiConnection()">Test Connection</button>
                        <div id="zzbp-api-result"></div>
                    </div>
                </div>
                
                <div class="zzbp-widget">
                    <h3>Quick Actions</h3>
                    <p>
                        <a href="<?php echo admin_url('admin.php?page=zzbp-settings'); ?>" class="button button-primary">Settings</a>
                        <a href="<?php echo admin_url('admin.php?page=zzbp-accommodations'); ?>" class="button">Accommodations</a>
                        <a href="<?php echo admin_url('admin.php?page=zzbp-bookings'); ?>" class="button">Bookings</a>
                    </p>
                </div>
            </div>
        </div>
        
        <script>
        function testApiConnection() {
            const button = document.querySelector('#zzbp-api-status button');
            const result = document.querySelector('#zzbp-api-result');
            
            if (!button || !result) return;
            
            // Check if required variables are available
            if (typeof ajaxurl === 'undefined') {
                result.innerHTML = '<span style="color: red;">✗ WordPress AJAX URL not available</span>';
                return;
            }
            
            if (typeof zzbp_admin_ajax === 'undefined') {
                result.innerHTML = '<span style="color: red;">✗ Admin AJAX variables not loaded</span>';
                return;
            }
            
            button.disabled = true;
            button.textContent = 'Testing...';
            result.innerHTML = '';
            
            fetch(ajaxurl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({
                    action: 'zzbp_test_api_connection',
                    nonce: zzbp_admin_ajax.nonce
                })
            })
            .then(response => response.json())
            .then(data => {
                button.disabled = false;
                button.textContent = 'Test Connection';
                
                if (data.success) {
                    result.innerHTML = '<span class="zzbp-status-success">✓ ' + data.data.message + '</span>';
                } else {
                    result.innerHTML = '<span class="zzbp-status-error">✗ ' + data.data.message + '</span>';
                }
            })
            .catch(error => {
                button.disabled = false;
                button.textContent = 'Test Connection';
                result.innerHTML = '<span class="zzbp-status-error">✗ Connection failed: ' + error.message + '</span>';
                console.error('API Test Error:', error);
            });
        }
        </script>
        <?php
    }
    
    /**
     * Settings page
     */
    public function settings_page() {
        // Get property info from API if connected
        $property_info = null;
        $api = new ZZBP_Api();
        $connection_test = $api->test_connection();
        
        if ($connection_test['success']) {
            $property_info = $connection_test['data'];
        }
        
        ?>
        <div class="wrap">
            <h1>ZeeZicht Booking Pro Settings</h1>
            
            <?php if ($connection_test['success']): ?>
                <div class="notice notice-success">
                    <p><strong>✅ Connected to SaaS Dashboard</strong></p>
                </div>
            <?php else: ?>
                <div class="notice notice-error">
                    <p><strong>❌ Not connected:</strong> <?php echo esc_html($connection_test['error']); ?></p>
                </div>
            <?php endif; ?>
            
            <form method="post" action="options.php">
                <?php
                settings_fields('zzbp_settings_group');
                do_settings_sections('zzbp-settings');
                submit_button('Save API Settings');
                ?>
            </form>
            
            <?php if ($property_info): ?>
                <div class="zzbp-property-info" style="margin-top: 30px;">
                    <h2>Current Property Information</h2>
                    <div class="zzbp-widget">
                        <table class="form-table">
                            <tr>
                                <th scope="row">Property Name</th>
                                <td><strong><?php echo esc_html($property_info['settings']['business']['name'] ?? $property_info['name'] ?? 'Not set'); ?></strong></td>
                            </tr>
                            <tr>
                                <th scope="row">Contact Email</th>
                                <td><?php echo esc_html($property_info['settings']['business']['email'] ?? $property_info['settings']['contact_email'] ?? 'Not set'); ?></td>
                            </tr>
                            <tr>
                                <th scope="row">Website URL</th>
                                <td><?php echo esc_html($property_info['settings']['business']['website_url'] ?? $property_info['settings']['website_url'] ?? 'Not set'); ?></td>
                            </tr>
                            <tr>
                                <th scope="row">Business Type</th>
                                <td><?php echo esc_html(ucfirst($property_info['business_type'] ?? 'Not set')); ?></td>
                            </tr>
                            <?php if (isset($property_info['url_structure'])): ?>
                            <tr>
                                <th scope="row">Accommodations URL</th>
                                <td><code><?php echo home_url('/' . $property_info['url_structure']['base'] . '/'); ?></code></td>
                            </tr>
                            <tr>
                                <th scope="row">Booking URL</th>
                                <td><code><?php echo home_url('/' . $property_info['url_structure']['booking'] . '/'); ?></code></td>
                            </tr>
                            <?php endif; ?>
                        </table>
                        
                        <p><em>This information is managed in your <a href="http://admin.zee-zicht.nl" target="_blank">SaaS Dashboard</a>. Changes made there will automatically appear here.</em></p>
                    </div>
                </div>
            <?php endif; ?>
        </div>
        <?php
    }
    
    /**
     * Accommodations page
     */
    public function accommodations_page() {
        ?>
        <div class="wrap">
            <h1>Accommodations</h1>
            <div id="zzbp-accommodations-list">
                <p>Loading accommodations...</p>
            </div>
        </div>
        
        <script>
        // Load accommodations via AJAX - with proper error handling
        document.addEventListener('DOMContentLoaded', function() {
            // Check if required variables are available
            if (typeof ajaxurl === 'undefined') {
                document.getElementById('zzbp-accommodations-list').innerHTML = '<p>Error: WordPress AJAX URL not available.</p>';
                return;
            }
            
            if (typeof zzbp_admin_ajax === 'undefined') {
                document.getElementById('zzbp-accommodations-list').innerHTML = '<p>Error: Admin AJAX variables not loaded properly.</p>';
                return;
            }
            
            fetch(ajaxurl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({
                    action: 'zzbp_get_accommodations',
                    nonce: zzbp_admin_ajax.nonce
                })
            })
            .then(response => response.json())
            .then(data => {
                const container = document.getElementById('zzbp-accommodations-list');
                
                if (data.success && data.data.length > 0) {
                    let html = '<table class="wp-list-table widefat fixed striped">';
                    html += '<thead><tr><th>Name</th><th>Type</th><th>Max Guests</th><th>Price</th></tr></thead><tbody>';
                    
                    data.data.forEach(acc => {
                        html += `<tr>
                            <td><strong>${acc.name}</strong></td>
                            <td>${acc.type || 'N/A'}</td>
                            <td>${acc.max_guests || 'N/A'}</td>
                            <td>€${acc.base_price || 'N/A'}</td>
                        </tr>`;
                    });
                    
                    html += '</tbody></table>';
                    container.innerHTML = html;
                } else {
                    container.innerHTML = '<p>No accommodations found. Please check your API connection.</p>';
                }
            })
            .catch(error => {
                console.error('AJAX Error:', error);
                document.getElementById('zzbp-accommodations-list').innerHTML = '<p>Error loading accommodations: ' + error.message + '</p>';
            });
        });
        </script>
        <?php
    }
    
    /**
     * SaaS redirect page - Links to the real booking management
     */
    public function saas_redirect_page() {
        ?>
        <div class="wrap">
            <h1>Booking Management</h1>
            
            <div class="zzbp-widget" style="max-width: 600px;">
                <h3>🚀 Manage Your Bookings</h3>
                <p>Booking management happens in your dedicated SaaS dashboard, not in WordPress.</p>
                
                <p><strong>Your SaaS Dashboard:</strong></p>
                <p>
                    <a href="http://admin.zee-zicht.nl" target="_blank" class="button button-primary button-large">
                        Open Booking Dashboard →
                    </a>
                </p>
                
                <hr style="margin: 20px 0;">
                
                <h4>Why separate dashboards?</h4>
                <ul>
                    <li>✅ <strong>Better Performance</strong> - Dedicated app for booking management</li>
                    <li>✅ <strong>Real-time Updates</strong> - Live booking status and notifications</li>
                    <li>✅ <strong>Advanced Features</strong> - Calendar management, pricing rules, analytics</li>
                    <li>✅ <strong>Mobile Optimized</strong> - Manage bookings on any device</li>
                </ul>
                
                <p><em>This WordPress plugin handles the <strong>public booking forms</strong> on your website. 
                The <strong>management interface</strong> is in your SaaS dashboard.</em></p>
            </div>
        </div>
        <?php
    }
    
    // Settings callbacks
    public function api_section_callback() {
        echo '<p>Configure your API connection settings.</p>';
    }
    
    public function property_section_callback() {
        echo '<p>Property information is automatically synced from your SaaS dashboard.</p>';
    }
    
    public function api_base_url_callback() {
        $settings = get_option('zzbp_settings', array());
        $value = $settings['api_base_url'] ?? 'http://localhost:2121/api';
        echo '<input type="url" name="zzbp_settings[api_base_url]" value="' . esc_attr($value) . '" class="regular-text" />';
    }
    
    public function api_key_callback() {
        $settings = get_option('zzbp_settings', array());
        $value = $settings['api_key'] ?? '';
        echo '<input type="password" name="zzbp_settings[api_key]" value="' . esc_attr($value) . '" class="regular-text" />';
    }
    
    
    /**
     * Sanitize settings
     */
    public function sanitize_settings($input) {
        $sanitized = array();
        
        if (isset($input['api_base_url'])) {
            $sanitized['api_base_url'] = esc_url_raw($input['api_base_url']);
        }
        
        if (isset($input['api_key'])) {
            $sanitized['api_key'] = sanitize_text_field($input['api_key']);
        }
        
        return $sanitized;
    }
}



=== FILE: ./includes/class-zzbp-ajax.php ===
<?php
/**
 * ZeeZicht Booking Pro - AJAX Handler
 * 
 * Handles all AJAX requests for the plugin.
 * Follows Single Responsibility Principle.
 * 
 * @package ZeeZichtBookingPro
 * @subpackage AJAX
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Ajax {
    
    /**
     * Initialize AJAX handlers
     */
    public function __construct() {
        $this->register_ajax_handlers();
    }
    
    /**
     * Register all AJAX handlers
     */
    private function register_ajax_handlers() {
        // Public and logged-in user handlers
        add_action('wp_ajax_zzbp_get_accommodations', array($this, 'ajax_get_accommodations'));
        add_action('wp_ajax_nopriv_zzbp_get_accommodations', array($this, 'ajax_get_accommodations'));
        
        add_action('wp_ajax_zzbp_calculate_pricing', array($this, 'ajax_calculate_pricing'));
        add_action('wp_ajax_nopriv_zzbp_calculate_pricing', array($this, 'ajax_calculate_pricing'));
        
        add_action('wp_ajax_zzbp_create_booking', array($this, 'ajax_create_booking'));
        add_action('wp_ajax_nopriv_zzbp_create_booking', array($this, 'ajax_create_booking'));
        
        // Admin-only handlers
        add_action('wp_ajax_zzbp_save_settings', array($this, 'ajax_save_settings'));
        add_action('wp_ajax_zzbp_test_api_connection', array($this, 'ajax_test_api_connection'));
    }
    
    /**
     * AJAX: Get accommodations - Using working method from old plugin
     */
    public function ajax_get_accommodations() {
        check_ajax_referer('zzbp_nonce', 'nonce');
        
        $api = new ZZBP_Api();
        $accommodations = $api->get_accommodations();
        
        wp_send_json_success($accommodations);
    }
    
    /**
     * AJAX: Calculate pricing
     */
    public function ajax_calculate_pricing() {
        check_ajax_referer('zzbp_nonce', 'nonce');
        
        $accommodation_id = sanitize_text_field($_POST['accommodation_id'] ?? '');
        $check_in = sanitize_text_field($_POST['check_in'] ?? '');
        $check_out = sanitize_text_field($_POST['check_out'] ?? '');
        $guests = intval($_POST['guests'] ?? 2);
        
        if (empty($accommodation_id) || empty($check_in) || empty($check_out)) {
            wp_send_json_error(array(
                'message' => 'Missing required parameters'
            ));
            return;
        }
        
        try {
            $api = new ZZBP_Api();
            $pricing = $api->calculate_pricing($accommodation_id, $check_in, $check_out, $guests);
            
            wp_send_json_success($pricing);
        } catch (Exception $e) {
            wp_send_json_error(array(
                'message' => 'Failed to calculate pricing: ' . $e->getMessage()
            ));
        }
    }
    
    /**
     * AJAX: Create booking
     */
    public function ajax_create_booking() {
        check_ajax_referer('zzbp_nonce', 'nonce');
        
        $booking_data = array(
            'accommodation_id' => sanitize_text_field($_POST['accommodation_id'] ?? ''),
            'check_in' => sanitize_text_field($_POST['check_in'] ?? ''),
            'check_out' => sanitize_text_field($_POST['check_out'] ?? ''),
            'guests' => intval($_POST['guests'] ?? 2),
            'guest_name' => sanitize_text_field($_POST['guest_name'] ?? ''),
            'guest_email' => sanitize_email($_POST['guest_email'] ?? ''),
            'guest_phone' => sanitize_text_field($_POST['guest_phone'] ?? ''),
            'special_requests' => sanitize_textarea_field($_POST['special_requests'] ?? '')
        );
        
        // Validate required fields
        $required_fields = ['accommodation_id', 'check_in', 'check_out', 'guest_name', 'guest_email'];
        foreach ($required_fields as $field) {
            if (empty($booking_data[$field])) {
                wp_send_json_error(array(
                    'message' => "Missing required field: {$field}"
                ));
                return;
            }
        }
        
        try {
            $api = new ZZBP_Api();
            $booking = $api->create_booking($booking_data);
            
            wp_send_json_success($booking);
        } catch (Exception $e) {
            wp_send_json_error(array(
                'message' => 'Failed to create booking: ' . $e->getMessage()
            ));
        }
    }
    
    /**
     * AJAX: Save settings (admin only)
     */
    public function ajax_save_settings() {
        if (!current_user_can('manage_options')) {
            wp_send_json_error(array(
                'message' => 'Insufficient permissions'
            ));
            return;
        }
        
        check_ajax_referer('zzbp_nonce', 'nonce');
        
        $settings = array(
            'api_base_url' => esc_url_raw($_POST['api_base_url'] ?? ''),
            'api_key' => sanitize_text_field($_POST['api_key'] ?? ''),
            'property_name' => sanitize_text_field($_POST['property_name'] ?? ''),
            'contact_email' => sanitize_email($_POST['contact_email'] ?? ''),
            'contact_phone' => sanitize_text_field($_POST['contact_phone'] ?? '')
        );
        
        update_option('zzbp_settings', $settings);
        
        wp_send_json_success(array(
            'message' => 'Settings saved successfully'
        ));
    }
    
    /**
     * AJAX: Test API connection (admin only) - Using working method
     */
    public function ajax_test_api_connection() {
        if (!current_user_can('manage_options')) {
            wp_send_json_error(array(
                'message' => 'Insufficient permissions'
            ));
            return;
        }
        
        check_ajax_referer('zzbp_nonce', 'nonce');
        
        $api = new ZZBP_Api();
        $result = $api->test_connection();
        
        if ($result['success']) {
            wp_send_json_success(array(
                'message' => 'API connection successful'
            ));
        } else {
            wp_send_json_error(array(
                'message' => $result['error'] ?? 'API connection failed'
            ));
        }
    }
}



=== FILE: ./includes/class-zzbp-api.php ===
<?php
/**
 * ZeeZicht Booking Pro - API Handler
 * 
 * Handles all external API communication for the plugin.
 * Follows Single Responsibility Principle.
 * 
 * @package ZeeZichtBookingPro
 * @subpackage API
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Api {
    
    private $api_base_url;
    private $api_key;
    
    /**
     * Initialize API handler
     */
    public function __construct() {
        // Use the same settings as the old plugin for compatibility
        $this->api_key = get_option('zzbp_api_key', '');
        $this->api_base_url = get_option('zzbp_dashboard_url', 'http://localhost:2121');
        
        // Fallback to new settings format if old ones don't exist
        if (empty($this->api_key)) {
            $settings = get_option('zzbp_settings', array());
            $this->api_base_url = $settings['api_base_url'] ?? 'http://localhost:2121/api';
            $this->api_key = $settings['api_key'] ?? '';
        }
    }
    
    /**
     * Get all accommodations - Using working method from old plugin
     */
    public function get_accommodations() {
        if (!$this->api_key) {
            return array();
        }
        
        $response = wp_remote_get($this->api_base_url . '/api/plugin/accommodations?' . http_build_query(array(
            'domain' => parse_url(home_url(), PHP_URL_HOST)
        )), array(
            'headers' => array(
                'X-API-Key' => $this->api_key
            )
        ));
        
        if (is_wp_error($response)) {
            error_log('ZZBP API Error: ' . $response->get_error_message());
            return array();
        }
        
        $body = wp_remote_retrieve_body($response);
        $data = json_decode($body, true);
        
        return $data['success'] ? $data['data'] : array();
    }
    
    /**
     * Get single accommodation by ID or slug
     */
    public function get_accommodation($identifier) {
        $response = $this->make_request('/accommodations/' . urlencode($identifier));
        
        if (!$response || !isset($response['success']) || !$response['success']) {
            throw new Exception('Failed to fetch accommodation from API');
        }
        
        return $response['data'] ?? null;
    }
    
    /**
     * Calculate pricing for accommodation
     */
    public function calculate_pricing($accommodation_id, $check_in, $check_out, $guests = 2) {
        $data = array(
            'accommodation_id' => $accommodation_id,
            'check_in' => $check_in,
            'check_out' => $check_out,
            'guests' => $guests
        );
        
        $response = $this->make_request('/pricing/calculate', 'POST', $data);
        
        if (!$response || !isset($response['success']) || !$response['success']) {
            throw new Exception('Failed to calculate pricing');
        }
        
        return $response['data'] ?? null;
    }
    
    /**
     * Create a new booking
     */
    public function create_booking($booking_data) {
        $response = $this->make_request('/bookings', 'POST', $booking_data);
        
        if (!$response || !isset($response['success']) || !$response['success']) {
            throw new Exception('Failed to create booking');
        }
        
        return $response['data'] ?? null;
    }
    
    /**
     * Test API connection - Using working method from old plugin
     */
    public function test_connection() {
        if (!$this->api_key) {
            return array('success' => false, 'error' => 'No API key configured');
        }
        
        $response = wp_remote_post($this->api_base_url . '/api/plugin/authenticate', array(
            'body' => json_encode(array(
                'domain' => parse_url(home_url(), PHP_URL_HOST),
                'plugin_version' => defined('ZZBP_VERSION') ? ZZBP_VERSION : '2.0.0'
            )),
            'headers' => array(
                'Content-Type' => 'application/json',
                'X-API-Key' => $this->api_key
            ),
            'timeout' => 30
        ));
        
        if (is_wp_error($response)) {
            error_log('ZZBP API Test Error: ' . $response->get_error_message());
            return array('success' => false, 'error' => $response->get_error_message());
        }
        
        $body = wp_remote_retrieve_body($response);
        $data = json_decode($body, true);
        
        if (!$data || !isset($data['success']) || !$data['success']) {
            $error = $data['error'] ?? 'Unknown error';
            error_log('ZZBP API Test Failed: ' . $error);
            return array('success' => false, 'error' => $error);
        }
        
        // Debug: Log the full response to see the structure
        error_log('ZZBP API Response: ' . json_encode($data, JSON_PRETTY_PRINT));
        
        return array('success' => true, 'data' => $data['property'] ?? $data['data'] ?? null);
    }
    
    /**
     * Get property information
     */
    public function get_property_info() {
        $response = $this->make_request('/property/info');
        
        if (!$response || !isset($response['success']) || !$response['success']) {
            throw new Exception('Failed to fetch property info from API');
        }
        
        return $response['data'] ?? array();
    }
    
    /**
     * Update property information
     */
    public function update_property_info($property_data) {
        $response = $this->make_request('/property/info', 'PUT', $property_data);
        
        if (!$response || !isset($response['success']) || !$response['success']) {
            throw new Exception('Failed to update property info');
        }
        
        return $response['data'] ?? null;
    }
    
    /**
     * Make API request
     */
    private function make_request($endpoint, $method = 'GET', $data = null) {
        $url = rtrim($this->api_base_url, '/') . '/' . ltrim($endpoint, '/');
        
        $args = array(
            'method' => $method,
            'timeout' => 30,
            'headers' => array(
                'Content-Type' => 'application/json',
                'User-Agent' => 'ZeeZicht-Booking-Pro/' . ZZBP_VERSION
            )
        );
        
        // Add API key if available
        if (!empty($this->api_key)) {
            $args['headers']['Authorization'] = 'Bearer ' . $this->api_key;
        }
        
        // Add data for POST/PUT requests
        if ($data && in_array($method, array('POST', 'PUT', 'PATCH'))) {
            $args['body'] = json_encode($data);
        }
        
        // Log the request for debugging
        error_log("ZZBP API Request: {$method} {$url}");
        if ($data) {
            error_log("ZZBP API Data: " . json_encode($data));
        }
        
        $response = wp_remote_request($url, $args);
        
        if (is_wp_error($response)) {
            error_log("ZZBP API Error: " . $response->get_error_message());
            throw new Exception('API request failed: ' . $response->get_error_message());
        }
        
        $status_code = wp_remote_retrieve_response_code($response);
        $body = wp_remote_retrieve_body($response);
        
        error_log("ZZBP API Response: {$status_code}");
        
        if ($status_code >= 400) {
            error_log("ZZBP API Error Response: " . $body);
            throw new Exception("API request failed with status {$status_code}");
        }
        
        $decoded = json_decode($body, true);
        
        if (json_last_error() !== JSON_ERROR_NONE) {
            error_log("ZZBP API JSON Error: " . json_last_error_msg());
            throw new Exception('Invalid JSON response from API');
        }
        
        return $decoded;
    }
    
    /**
     * Set API credentials
     */
    public function set_credentials($api_base_url, $api_key = '') {
        $this->api_base_url = $api_base_url;
        $this->api_key = $api_key;
    }
}



=== FILE: ./includes/class-zzbp-assets.php ===
<?php
/**
 * ZeeZicht Booking Pro - Assets Handler
 * 
 * Handles all CSS and JavaScript enqueuing for the plugin.
 * Follows Single Responsibility Principle.
 * 
 * @package ZeeZichtBookingPro
 * @subpackage Assets
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Assets {
    
    /**
     * Initialize assets handling
     */
    public function __construct() {
        add_action('wp_enqueue_scripts', array($this, 'conditionally_enqueue_assets'));
    }
    
    /**
     * Conditionally enqueue assets - PROFESSIONAL BEST PRACTICE
     */
    public function conditionally_enqueue_assets() {
        global $post;
        
        $needs_assets = false;
        
        // Method 1: Check for ANY of our shortcodes in post content
        $our_shortcodes = [
            'zzbp_accommodation_list',
            'zzbp_hero_image',
            'zzbp_property_header', 
            'zzbp_booking_sidebar',
            'zzbp_amenities',
            'zzbp_photo_gallery',
            'zzbp_availability_calendar',
            'zzbp_booking_modal'
        ];
        
        if (is_a($post, 'WP_Post')) {
            foreach ($our_shortcodes as $shortcode) {
                if (has_shortcode($post->post_content, $shortcode)) {
                    $needs_assets = true;
                    break;
                }
            }
        }
        
        // Method 2: Check for single accommodation URL pattern
        if (get_query_var('zzbp_accommodation_slug') || 
            defined('ZZBP_LOADING_SINGLE_ACCOMMODATION')) {
            $needs_assets = true;
        }
        
        // Method 3: Check URL pattern for accommodations (FALLBACK)
        $current_url = $_SERVER['REQUEST_URI'] ?? '';
        if (strpos($current_url, '/accommodations/') !== false) {
            $needs_assets = true;
        }
        
        if ($needs_assets) {
            error_log('ZZBP: Enqueuing assets - URL: ' . $current_url);
            $this->enqueue_all_assets();
        } else {
            error_log('ZZBP: No assets needed - URL: ' . $current_url);
        }
    }
    
    /**
     * Enqueue ALL assets - ONE PLACE, ONE TIME
     */
    private function enqueue_all_assets() {
        // Main CSS - Built version preferred, fallback to dev version
        $css_dist = plugin_dir_path(ZZBP_PLUGIN_FILE) . 'dist/css/style.min.css';
        $css_dev = plugin_dir_path(ZZBP_PLUGIN_FILE) . 'assets/css/tailwind.css';
        
        if (file_exists($css_dist)) {
            wp_enqueue_style(
                'zzbp-main-style',
                plugin_dir_url(ZZBP_PLUGIN_FILE) . 'dist/css/style.min.css',
                [],
                '10.0.0'
            );
        } elseif (file_exists($css_dev)) {
            wp_enqueue_style(
                'zzbp-main-style',
                plugin_dir_url(ZZBP_PLUGIN_FILE) . 'assets/css/tailwind.css',
                [],
                '10.0.0'
            );
        }

        // External Libraries
        wp_enqueue_script(
            'flatpickr-js',
            'https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/flatpickr.min.js',
            [],
            '4.6.13',
            true
        );
        
        wp_enqueue_style(
            'flatpickr-css',
            'https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/flatpickr.min.css',
            [],
            '4.6.13'
        );
        
        wp_enqueue_script(
            'flatpickr-nl',
            'https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/l10n/nl.js',
            ['flatpickr-js'],
            '4.6.13',
            true
        );

        wp_enqueue_script(
            'lucide-icons', 
            'https://unpkg.com/lucide@latest/dist/umd/lucide.js', 
            [], 
            null, 
            true
        );
        
        // Main JS - Built version preferred, fallback to dev version
        $js_dist = plugin_dir_path(ZZBP_PLUGIN_FILE) . 'dist/js/app.min.js';
        $js_dev = plugin_dir_path(ZZBP_PLUGIN_FILE) . 'assets/js/main.js';
        
        if (file_exists($js_dist)) {
            wp_enqueue_script(
                'zzbp-main',
                plugin_dir_url(ZZBP_PLUGIN_FILE) . 'dist/js/app.min.js',
                ['jquery', 'flatpickr-js'],
                '10.0.0',
                true
            );
        } elseif (file_exists($js_dev)) {
            wp_enqueue_script(
                'zzbp-main',
                plugin_dir_url(ZZBP_PLUGIN_FILE) . 'assets/js/main.js',
                ['jquery', 'flatpickr-js'],
                '10.0.0',
                true
            );
        }
        
        // Localize script if any JS was loaded
        if (file_exists($js_dist) || file_exists($js_dev)) {
            wp_localize_script('zzbp-main', 'zzbp_ajax', array(
                'ajax_url' => admin_url('admin-ajax.php'),
                'nonce' => wp_create_nonce('zzbp_nonce')
            ));
        }
    }
    
    /**
     * Force enqueue assets (for routing that needs immediate loading)
     */
    public function force_enqueue_assets() {
        $this->enqueue_all_assets();
    }
}



=== FILE: ./includes/class-zzbp-routing.php ===
<?php
/**
 * ZeeZicht Booking Pro - Routing Handler
 * 
 * Handles URL rewrites and template routing for the plugin.
 * Follows Single Responsibility Principle.
 * 
 * @package ZeeZichtBookingPro
 * @subpackage Routing
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Routing {
    
    /**
     * Initialize routing
     */
    public function __construct() {
        add_action('init', array($this, 'add_rewrite_rules'));
        add_filter('query_vars', array($this, 'add_query_vars'));
        add_action('template_redirect', array($this, 'handle_single_accommodation'));
    }
    
    /**
     * Add rewrite rules for single accommodations
     */
    public function add_rewrite_rules() {
        $property_info = get_option('zzbp_property_info');
        if ($property_info && isset($property_info['url_structure']['base'])) {
            $base = $property_info['url_structure']['base'];
            add_rewrite_rule(
                '^' . $base . '/([^/]+)/?$',
                'index.php?zzbp_accommodation_slug=$matches[1]',
                'top'
            );
        }
    }
    
    /**
     * Add query vars
     */
    public function add_query_vars($vars) {
        $vars[] = 'zzbp_accommodation_slug';
        return $vars;
    }
    
    /**
     * Handle single accommodation page
     */
    public function handle_single_accommodation() {
        $accommodation_slug = get_query_var('zzbp_accommodation_slug');
        
        if ($accommodation_slug) {
            // Define that we're loading a single accommodation (for CSS detection)
            define('ZZBP_LOADING_SINGLE_ACCOMMODATION', true);
            
            // Debug logging
            error_log("ZZBP Debug: Looking for accommodation slug: " . $accommodation_slug);
            
            try {
                // Get accommodation data
                $api = new ZZBP_Api();
                $accommodations = $api->get_accommodations();
                error_log("ZZBP Debug: Found " . count($accommodations) . " accommodations");
                
                $current_accommodation = null;
                
                foreach ($accommodations as $acc) {
                    // Use API slug if available, fallback to generated slug
                    $acc_slug = $acc['slug'] ?? $this->generate_slug($acc['name']);
                    error_log("ZZBP Debug: Checking accommodation: " . $acc['name'] . " (slug: " . $acc_slug . ")");
                    
                    if ($acc_slug === $accommodation_slug) {
                        $current_accommodation = $acc;
                        error_log("ZZBP Debug: Found matching accommodation: " . $acc['name']);
                        break;
                    }
                }
                
                if ($current_accommodation) {
                    $this->load_single_accommodation_template($current_accommodation);
                    exit;
                } else {
                    error_log("ZZBP Debug: No accommodation found for slug: " . $accommodation_slug);
                    // Redirect to 404 or accommodations list
                    wp_redirect(home_url('/accommodations/'));
                    exit;
                }
            } catch (Exception $e) {
                error_log("ZZBP Error: " . $e->getMessage());
                wp_redirect(home_url('/accommodations/'));
                exit;
            }
        }
    }
    
    /**
     * Load single accommodation template
     */
    private function load_single_accommodation_template($accommodation) {
        // Set global accommodation data
        global $zzbp_current_accommodation;
        $zzbp_current_accommodation = $accommodation;
        
        // Force load assets for single accommodation
        if (class_exists('ZZBP_Assets')) {
            $assets = new ZZBP_Assets();
            $assets->force_enqueue_assets();
        }
        
        // Load the working template (with styling and assets)
        $template = ZZBP_PLUGIN_PATH . 'templates/single-accommodation-working.php';
        
        if (file_exists($template)) {
            include $template;
        } else {
            wp_die('Template not found');
        }
    }
    
    /**
     * Generate URL slug from accommodation name
     */
    private function generate_slug($name) {
        return sanitize_title($name);
    }
    
    /**
     * Get accommodation URL
     */
    public function get_accommodation_url($accommodation) {
        $property_info = get_option('zzbp_property_info');
        $base = $property_info['url_structure']['base'] ?? 'accommodations';
        // Use API slug if available, fallback to generated slug
        $slug = $accommodation['slug'] ?? $this->generate_slug($accommodation['name']);
        
        return home_url("/{$base}/{$slug}/");
    }
    
    /**
     * Force rewrite rules flush (for activation/settings changes)
     */
    public function flush_rewrite_rules() {
        $this->add_rewrite_rules();
        flush_rewrite_rules();
    }
}



=== FILE: ./includes/class-zzbp-shortcodes.php ===
<?php
/**
 * ZeeZicht Booking Pro - CLEAN Shortcodes Handler
 * 
 * PROFESSIONAL BEST PRACTICE VERSION
 * - No inline styles/scripts
 * - Template parts only
 * - Single responsibility
 * 
 * @package ZeeZichtBookingPro
 * @subpackage Shortcodes
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class ZZBP_Shortcodes {
    
    /**
     * Initialize shortcodes
     */
    public function __construct() {
        $this->register_shortcodes();
    }
    
    /**
     * Register all shortcodes - CLEAN VERSION
     */
    private function register_shortcodes() {
        // Main shortcodes
        add_shortcode('zzbp_accommodation_list', array($this, 'accommodation_list_shortcode'));
        
        // Modular component shortcodes - TEMPLATE PARTS ONLY
        add_shortcode('zzbp_hero_image', array($this, 'hero_image_shortcode'));
        add_shortcode('zzbp_property_header', array($this, 'property_header_shortcode'));
        add_shortcode('zzbp_booking_sidebar', array($this, 'booking_sidebar_shortcode'));
        add_shortcode('zzbp_amenities', array($this, 'amenities_shortcode'));
        add_shortcode('zzbp_photo_gallery', array($this, 'photo_gallery_shortcode'));
        add_shortcode('zzbp_availability_calendar', array($this, 'availability_calendar_shortcode'));
        add_shortcode('zzbp_booking_modal', array($this, 'booking_modal_shortcode'));
        add_shortcode('zzbp_description', array($this, 'description_shortcode'));
    }
    
    /**
     * Accommodation list shortcode - CLEAN LOADER
     */
    public function accommodation_list_shortcode($atts) {
        $atts = shortcode_atts(array(
            'layout' => 'grid',
            'show_pricing' => 'true',
            'show_amenities' => 'true'
        ), $atts);
        
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/accommodation-list.php';
        return ob_get_clean();
    }
    
    /**
     * Hero image shortcode - CLEAN LOADER
     */
    public function hero_image_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/hero-image.php';
        return ob_get_clean();
    }
    
    /**
     * Property header shortcode - CLEAN LOADER
     */
    public function property_header_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/property-header.php';
        return ob_get_clean();
    }
    
    /**
     * Booking sidebar shortcode - CLEAN LOADER
     */
    public function booking_sidebar_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/booking-sidebar.php';
        return ob_get_clean();
    }
    
    /**
     * Amenities shortcode - CLEAN LOADER
     */
    public function amenities_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/amenities.php';
        return ob_get_clean();
    }
    
    /**
     * Photo gallery shortcode - CLEAN LOADER
     */
    public function photo_gallery_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/photo-gallery.php';
        return ob_get_clean();
    }
    
    /**
     * Availability calendar shortcode - CLEAN LOADER
     */
    public function availability_calendar_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/availability-calendar.php';
        return ob_get_clean();
    }
    
    /**
     * Booking modal shortcode - CLEAN LOADER
     */
    public function booking_modal_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/booking-modal.php';
        return ob_get_clean();
    }
    
    /**
     * Description shortcode - CLEAN LOADER
     */
    public function description_shortcode($atts) {
        ob_start();
        include ZZBP_PLUGIN_PATH . 'templates/parts/description.php';
        return ob_get_clean();
    }
}



=== FILE: ./templates/accommodation-list.php ===
<?php
/**
 * Accommodation List Template
 * 
 * Available variables:
 * $atts - Shortcode attributes
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

// Get accommodations from API
$api = new ZZBP_Api();
$accommodations = $api->get_accommodations();

if (empty($accommodations)) {
    echo '<div class="zzbp-message error">No accommodations available at the moment.</div>';
    return;
}

$layout = $atts['layout'] ?? 'grid';
$show_pricing = ($atts['show_pricing'] ?? 'true') === 'true';
$show_amenities = ($atts['show_amenities'] ?? 'true') === 'true';
?>

<div class="zzbp-accommodation-list layout-<?php echo esc_attr($layout); ?>">
    <?php foreach ($accommodations as $accommodation): ?>
    <div class="zzbp-accommodation-item" data-id="<?php echo esc_attr($accommodation['id']); ?>">
        
        <!-- Accommodation Header -->
        <div class="accommodation-header">
            <h3 class="accommodation-title">
                <a href="<?php echo esc_url(home_url('/' . get_option('zzbp_accommodations_page_slug', 'accommodaties') . '/' . $accommodation['slug'])); ?>">
                    <?php echo esc_html($accommodation['name']); ?>
                </a>
            </h3>
            <span class="accommodation-type"><?php echo esc_html(ucfirst(str_replace('-', ' ', $accommodation['type']))); ?></span>
        </div>

        <!-- Accommodation Image -->
        <?php if (!empty($accommodation['photos']) || !empty($accommodation['primary_image'])): ?>
        <div class="accommodation-image">
            <?php 
            // Use primary_image first, then fallback to first photo
            $image_url = $accommodation['primary_image'] ?? $accommodation['photos'][0] ?? '';
            
            // Fix URL if it's relative
            if ($image_url && strpos($image_url, 'http') !== 0) {
                if (strpos($image_url, '/uploads/') === 0) {
                    $image_url = 'http://localhost:2121' . $image_url;
                }
            }
            ?>
            <img src="<?php echo esc_url($image_url); ?>" 
                 alt="<?php echo esc_attr($accommodation['name']); ?>"
                 loading="lazy"
                 onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
            
            <!-- Fallback if image fails -->
            <div class="accommodation-image-fallback" style="display: none; width: 100%; height: 200px; background: linear-gradient(135deg, #ff385c 0%, #e31c5f 100%); border-radius: 8px; color: white; align-items: center; justify-content: center; text-align: center;">
                <div>
                    <div style="font-size: 2rem; margin-bottom: 0.5rem;">🏨</div>
                    <div style="font-weight: 600;"><?php echo esc_html($accommodation['name']); ?></div>
                </div>
            </div>
        </div>
        <?php endif; ?>

        <!-- Accommodation Details -->
        <div class="accommodation-details">
            <?php if ($accommodation['description']): ?>
            <p class="accommodation-description">
                <?php echo esc_html(wp_trim_words($accommodation['description'], 25)); ?>
            </p>
            <?php endif; ?>

            <div class="accommodation-specs">
                <div class="spec-item">
                    <span class="spec-label">👥 Max gasten:</span>
                    <span class="spec-value"><?php echo esc_html($accommodation['max_guests']); ?></span>
                </div>
                
                <?php if ($accommodation['surface_area']): ?>
                <div class="spec-item">
                    <span class="spec-label">📐 Oppervlakte:</span>
                    <span class="spec-value"><?php echo esc_html($accommodation['surface_area']); ?> m²</span>
                </div>
                <?php endif; ?>
                
                <?php if ($show_pricing): ?>
                <div class="spec-item price">
                    <span class="spec-label">💰 Vanaf:</span>
                    <span class="spec-value">€<?php echo number_format($accommodation['base_price'], 2); ?> per nacht</span>
                </div>
                <?php endif; ?>
            </div>
        </div>

        <!-- Amenities -->
        <?php if ($show_amenities && !empty($accommodation['amenities'])): ?>
        <div class="accommodation-amenities">
            <?php foreach (array_slice($accommodation['amenities'], 0, 4) as $amenity): ?>
                <span class="amenity-tag">✓ <?php echo esc_html($amenity); ?></span>
            <?php endforeach; ?>
            <?php if (count($accommodation['amenities']) > 4): ?>
                <span class="amenity-more">+<?php echo count($accommodation['amenities']) - 4; ?> meer</span>
            <?php endif; ?>
        </div>
        <?php endif; ?>

        <!-- Actions -->
        <div class="accommodation-actions">
            <a href="<?php echo esc_url(home_url('/' . get_option('zzbp_booking_page_slug', 'reserveren') . '/')); ?>" 
               class="zzbp-btn zzbp-btn-primary"
               onclick="selectAccommodation('<?php echo esc_js($accommodation['id']); ?>', '<?php echo esc_js($accommodation['name']); ?>')">
                📅 Reserveren
            </a>
            <a href="<?php echo esc_url(home_url('/' . get_option('zzbp_accommodations_page_slug', 'accommodaties') . '/' . $accommodation['slug'])); ?>" 
               class="zzbp-btn zzbp-btn-secondary">
                👁️ Details
            </a>
        </div>
    </div>
    <?php endforeach; ?>
</div>

<style>
/* Accommodation List Styles */
.zzbp-accommodation-list {
    display: grid;
    gap: 30px;
    margin: 20px 0;
}

.zzbp-accommodation-list.layout-grid {
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
}

.zzbp-accommodation-list.layout-list {
    grid-template-columns: 1fr;
}

.zzbp-accommodation-list.layout-cards {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

.zzbp-accommodation-item {
    background: #ffffff;
    border: 1px solid #e1e5e9;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.zzbp-accommodation-item:hover {
    box-shadow: 0 4px 16px rgba(0,0,0,0.15);
    transform: translateY(-2px);
}

.accommodation-header {
    padding: 20px 20px 10px;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}

.accommodation-title {
    margin: 0;
    font-size: 22px;
    font-weight: 600;
}

.accommodation-title a {
    color: #2c3e50;
    text-decoration: none;
}

.accommodation-title a:hover {
    color: #3498db;
}

.accommodation-type {
    background: #3498db;
    color: white;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 12px;
    text-transform: uppercase;
    font-weight: 600;
}

.accommodation-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
}

.accommodation-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.accommodation-details {
    padding: 20px;
}

.accommodation-description {
    color: #666;
    line-height: 1.6;
    margin-bottom: 15px;
}

.accommodation-specs {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-bottom: 15px;
}

.spec-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.spec-label {
    color: #666;
    font-size: 14px;
}

.spec-value {
    font-weight: 600;
    color: #2c3e50;
}

.spec-item.price .spec-value {
    color: #27ae60;
    font-size: 18px;
}

.accommodation-amenities {
    padding: 0 20px 15px;
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
}

.amenity-tag {
    background: #ecf0f1;
    color: #2c3e50;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
}

.amenity-more {
    background: #bdc3c7;
    color: #2c3e50;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-style: italic;
}

.accommodation-actions {
    padding: 20px;
    border-top: 1px solid #ecf0f1;
    display: flex;
    gap: 10px;
}

.zzbp-btn {
    flex: 1;
    padding: 12px 20px;
    border: none;
    border-radius: 6px;
    text-decoration: none;
    text-align: center;
    font-weight: 600;
    transition: all 0.3s ease;
    cursor: pointer;
}

.zzbp-btn-primary {
    background: #3498db;
    color: white;
}

.zzbp-btn-primary:hover {
    background: #2980b9;
    color: white;
}

.zzbp-btn-secondary {
    background: #ecf0f1;
    color: #2c3e50;
}

.zzbp-btn-secondary:hover {
    background: #bdc3c7;
    color: #2c3e50;
}

.zzbp-message {
    padding: 15px 20px;
    border-radius: 6px;
    margin: 20px 0;
}

.zzbp-message.error {
    background: #fee;
    color: #c33;
    border: 1px solid #fcc;
}

/* Responsive Design */
@media (max-width: 768px) {
    .zzbp-accommodation-list {
        grid-template-columns: 1fr !important;
        gap: 20px;
    }
    
    .accommodation-header {
        flex-direction: column;
        gap: 10px;
        align-items: flex-start;
    }
    
    .accommodation-actions {
        flex-direction: column;
    }
}
</style>

<script>
/**
 * Select accommodation and store in localStorage
 */
function selectAccommodation(accommodationId, accommodationName) {
    // Store selected accommodation in localStorage
    const selectedAccommodation = {
        id: accommodationId,
        name: accommodationName,
        selected_at: new Date().toISOString()
    };
    
    localStorage.setItem('zzbp_selected_accommodation', JSON.stringify(selectedAccommodation));
    
    // Optional: Show confirmation
    console.log('Selected accommodation:', accommodationName);
    
    // Continue with the link (return true allows the link to proceed)
    return true;
}

/**
 * Get selected accommodation from localStorage
 */
function getSelectedAccommodation() {
    const stored = localStorage.getItem('zzbp_selected_accommodation');
    if (stored) {
        try {
            return JSON.parse(stored);
        } catch (e) {
            console.error('Error parsing stored accommodation:', e);
            localStorage.removeItem('zzbp_selected_accommodation');
        }
    }
    return null;
}

/**
 * Clear selected accommodation
 */
function clearSelectedAccommodation() {
    localStorage.removeItem('zzbp_selected_accommodation');
}
</script>



=== FILE: ./templates/admin-accommodations.php ===
<?php
/**
 * Admin Accommodations Template
 * 
 * Available variables:
 * $accommodations - array of accommodations from API
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}
?>

<div class="wrap">
    <h1><?php echo esc_html(get_admin_page_title()); ?></h1>
    
    <?php if (empty($accommodations)): ?>
        <div class="notice notice-warning">
            <p><strong>⚠️ No accommodations found.</strong></p>
            <p>Make sure your API connection is working and you have accommodations configured in your dashboard.</p>
            <p><a href="<?php echo esc_url(admin_url('admin.php?page=zee-zicht-booking-pro')); ?>" class="button">Check Settings</a></p>
        </div>
    <?php else: ?>
        <div class="notice notice-info">
            <p><strong>ℹ️ Data synced from dashboard.</strong> Found <?php echo count($accommodations); ?> accommodation(s).</p>
        </div>
    <?php endif; ?>

    <div class="zzbp-accommodations-container">
        
        <?php if (!empty($accommodations)): ?>
        <div class="zzbp-accommodations-grid">
            <?php foreach ($accommodations as $accommodation): ?>
            <div class="zzbp-accommodation-card">
                <div class="accommodation-header">
                    <h3><?php echo esc_html($accommodation['name']); ?></h3>
                    <span class="accommodation-type"><?php echo esc_html(ucfirst(str_replace('-', ' ', $accommodation['type']))); ?></span>
                </div>
                
                <div class="accommodation-details">
                    <div class="detail-row">
                        <span class="label">Max Guests:</span>
                        <span class="value"><?php echo esc_html($accommodation['max_guests']); ?> persons</span>
                    </div>
                    
                    <?php if ($accommodation['surface_area']): ?>
                    <div class="detail-row">
                        <span class="label">Surface Area:</span>
                        <span class="value"><?php echo esc_html($accommodation['surface_area']); ?> m²</span>
                    </div>
                    <?php endif; ?>
                    
                    <div class="detail-row">
                        <span class="label">Base Price:</span>
                        <span class="value price">€<?php echo number_format($accommodation['base_price'], 2); ?> per night</span>
                    </div>
                </div>
                
                <?php if (!empty($accommodation['description'])): ?>
                <div class="accommodation-description">
                    <p><?php echo esc_html(wp_trim_words($accommodation['description'], 20)); ?></p>
                </div>
                <?php endif; ?>
                
                <?php if (!empty($accommodation['amenities'])): ?>
                <div class="accommodation-amenities">
                    <strong>Amenities:</strong>
                    <div class="amenities-list">
                        <?php foreach ($accommodation['amenities'] as $amenity): ?>
                            <span class="amenity-tag"><?php echo esc_html($amenity); ?></span>
                        <?php endforeach; ?>
                    </div>
                </div>
                <?php endif; ?>
                
                <!-- Pricing Options -->
                <?php 
                $recurring_options = $accommodation['pricing_options']['recurring'] ?? [];
                $onetime_options = $accommodation['pricing_options']['one_time'] ?? [];
                ?>
                
                <?php if (!empty($recurring_options) || !empty($onetime_options)): ?>
                <div class="pricing-options">
                    <h4>Pricing Options</h4>
                    
                    <?php if (!empty($recurring_options)): ?>
                    <div class="options-section">
                        <h5>Per Night Options (<?php echo count($recurring_options); ?>)</h5>
                        <ul class="options-list">
                            <?php foreach (array_slice($recurring_options, 0, 3) as $option): ?>
                            <li>
                                <strong><?php echo esc_html($option['name']); ?></strong>
                                - €<?php echo number_format($option['price_per_night'], 2); ?>
                                <span class="unit"><?php echo esc_html($option['unit']); ?></span>
                            </li>
                            <?php endforeach; ?>
                            <?php if (count($recurring_options) > 3): ?>
                            <li class="more-options">... and <?php echo count($recurring_options) - 3; ?> more</li>
                            <?php endif; ?>
                        </ul>
                    </div>
                    <?php endif; ?>
                    
                    <?php if (!empty($onetime_options)): ?>
                    <div class="options-section">
                        <h5>One-time Options (<?php echo count($onetime_options); ?>)</h5>
                        <ul class="options-list">
                            <?php foreach (array_slice($onetime_options, 0, 3) as $option): ?>
                            <li>
                                <strong><?php echo esc_html($option['name']); ?></strong>
                                - €<?php echo number_format($option['price_per_stay'], 2); ?>
                                <span class="unit"><?php echo esc_html($option['unit']); ?></span>
                            </li>
                            <?php endforeach; ?>
                            <?php if (count($onetime_options) > 3): ?>
                            <li class="more-options">... and <?php echo count($onetime_options) - 3; ?> more</li>
                            <?php endif; ?>
                        </ul>
                    </div>
                    <?php endif; ?>
                </div>
                <?php endif; ?>
                
                <div class="accommodation-actions">
                    <button type="button" class="button button-secondary" onclick="copyShortcode('<?php echo esc_js($accommodation['id']); ?>')">
                        📋 Copy Shortcode
                    </button>
                    <a href="#" class="button button-primary" target="_blank">
                        👁️ Preview
                    </a>
                </div>
                
                <!-- Hidden shortcode for copying -->
                <input type="hidden" class="shortcode-input" data-id="<?php echo esc_attr($accommodation['id']); ?>" 
                       value='[zzbp_booking_form accommodation_id="<?php echo esc_attr($accommodation['id']); ?>"]'>
            </div>
            <?php endforeach; ?>
        </div>
        
        <!-- Bulk Actions -->
        <div class="zzbp-bulk-actions" style="margin-top: 30px;">
            <div class="postbox">
                <div class="postbox-header">
                    <h2 class="hndle">🔄 Sync & Actions</h2>
                </div>
                <div class="inside">
                    <p>Last synced: <strong><?php echo date('Y-m-d H:i:s'); ?></strong></p>
                    <p>
                        <button type="button" class="button button-secondary" onclick="location.reload();">
                            🔄 Refresh Data
                        </button>
                        <a href="<?php echo esc_url(admin_url('admin.php?page=zee-zicht-booking-pro')); ?>" class="button">
                            ⚙️ Settings
                        </a>
                    </p>
                </div>
            </div>
        </div>
        
        <?php endif; ?>
    </div>
</div>

<style>
.zzbp-accommodations-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 20px;
    margin-top: 20px;
}

.zzbp-accommodation-card {
    border: 1px solid #c3c4c7;
    border-radius: 8px;
    padding: 20px;
    background: #fff;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.accommodation-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid #e0e0e0;
}

.accommodation-header h3 {
    margin: 0;
    color: #1d2327;
    font-size: 18px;
}

.accommodation-type {
    background: #2271b1;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    text-transform: uppercase;
}

.accommodation-details {
    margin-bottom: 15px;
}

.detail-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 8px;
}

.detail-row .label {
    font-weight: 600;
    color: #646970;
}

.detail-row .value {
    color: #1d2327;
}

.detail-row .value.price {
    color: #00a32a;
    font-weight: 600;
}

.accommodation-description {
    margin-bottom: 15px;
    padding: 10px;
    background: #f6f7f7;
    border-radius: 4px;
}

.accommodation-description p {
    margin: 0;
    color: #646970;
    font-style: italic;
}

.accommodation-amenities {
    margin-bottom: 15px;
}

.amenities-list {
    margin-top: 8px;
}

.amenity-tag {
    display: inline-block;
    background: #f0f6fc;
    color: #0073aa;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 11px;
    margin-right: 5px;
    margin-bottom: 3px;
}

.pricing-options {
    margin-bottom: 20px;
    padding: 15px;
    background: #f9f9f9;
    border-radius: 6px;
}

.pricing-options h4 {
    margin: 0 0 10px 0;
    color: #1d2327;
    font-size: 14px;
}

.options-section {
    margin-bottom: 15px;
}

.options-section:last-child {
    margin-bottom: 0;
}

.options-section h5 {
    margin: 0 0 8px 0;
    color: #646970;
    font-size: 13px;
    font-weight: 600;
}

.options-list {
    margin: 0;
    padding-left: 15px;
}

.options-list li {
    margin-bottom: 4px;
    font-size: 12px;
}

.options-list .unit {
    color: #646970;
    font-style: italic;
}

.options-list .more-options {
    color: #646970;
    font-style: italic;
}

.accommodation-actions {
    display: flex;
    gap: 10px;
    padding-top: 15px;
    border-top: 1px solid #e0e0e0;
}

.accommodation-actions .button {
    flex: 1;
    text-align: center;
    justify-content: center;
}

@media (max-width: 768px) {
    .zzbp-accommodations-grid {
        grid-template-columns: 1fr;
    }
    
    .accommodation-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .accommodation-actions {
        flex-direction: column;
    }
}
</style>

<script>
function copyShortcode(accommodationId) {
    const input = document.querySelector('.shortcode-input[data-id="' + accommodationId + '"]');
    if (input) {
        // Create a temporary textarea to copy the text
        const textarea = document.createElement('textarea');
        textarea.value = input.value;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        
        // Show feedback
        alert('Shortcode copied to clipboard!\n\n' + input.value);
    }
}
</script>



=== FILE: ./templates/admin-settings.php ===
<?php
/**
 * Admin Settings Template
 * 
 * Available variables:
 * $connection_status - boolean or null
 * $property_info - array or null
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

$api_key = get_option('zzbp_api_key', '');
$dashboard_url = get_option('zzbp_dashboard_url', 'http://localhost:2121');
?>

<div class="wrap">
    <h1><?php echo esc_html(get_admin_page_title()); ?></h1>
    
    <?php if ($connection_status === true && $property_info): ?>
        <div class="notice notice-success">
            <p><strong>✅ Connected!</strong> Successfully connected to <strong><?php echo esc_html($property_info['name']); ?></strong></p>
            <p>Business Type: <strong><?php echo esc_html(ucfirst($property_info['business_type'])); ?></strong> | 
               Domain: <strong><?php echo esc_html($property_info['domain']); ?></strong></p>
        </div>
    <?php elseif ($connection_status === false): ?>
        <div class="notice notice-error">
            <p><strong>❌ Connection Failed!</strong> Please check your API key and dashboard URL.</p>
        </div>
    <?php endif; ?>

    <div class="zzbp-admin-container" style="max-width: 800px;">
        
        <!-- Connection Setup -->
        <div class="postbox" style="margin-top: 20px;">
            <div class="postbox-header">
                <h2 class="hndle">🔗 Dashboard Connection</h2>
            </div>
            <div class="inside">
                <form method="post" action="">
                    <?php wp_nonce_field('zzbp_settings_nonce'); ?>
                    
                    <table class="form-table">
                        <tr>
                            <th scope="row">
                                <label for="zzbp_dashboard_url">Dashboard URL</label>
                            </th>
                            <td>
                                <input type="url" 
                                       id="zzbp_dashboard_url" 
                                       name="zzbp_dashboard_url" 
                                       value="<?php echo esc_attr($dashboard_url); ?>" 
                                       class="regular-text" 
                                       placeholder="http://localhost:2121" />
                                <p class="description">The URL where your booking dashboard is running</p>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">
                                <label for="zzbp_api_key">API Key</label>
                            </th>
                            <td>
                                <input type="text" 
                                       id="zzbp_api_key" 
                                       name="zzbp_api_key" 
                                       value="<?php echo esc_attr($api_key); ?>" 
                                       class="regular-text" 
                                       placeholder="zzbp_live_..." />
                                <p class="description">Get your API key from the dashboard settings</p>
                            </td>
                        </tr>
                    </table>
                    
                    <?php submit_button('Save Settings', 'primary', 'zzbp_save_settings'); ?>
                </form>
            </div>
        </div>

        <?php if ($property_info): ?>
        <!-- Property Information -->
        <div class="postbox" style="margin-top: 20px;">
            <div class="postbox-header">
                <h2 class="hndle">🏨 Property Information</h2>
            </div>
            <div class="inside">
                <table class="widefat">
                    <tbody>
                        <tr>
                            <td><strong>Property Name:</strong></td>
                            <td><?php echo esc_html($property_info['settings']['business']['name']); ?></td>
                        </tr>
                        <tr>
                            <td><strong>Business Type:</strong></td>
                            <td><?php echo esc_html(ucfirst($property_info['business_type'])); ?></td>
                        </tr>
                        <tr>
                            <td><strong>Contact Email:</strong></td>
                            <td><?php echo esc_html($property_info['settings']['business']['email']); ?></td>
                        </tr>
                        <tr>
                            <td><strong>Website URL:</strong></td>
                            <td><?php echo esc_html($property_info['settings']['business']['website_url']); ?></td>
                        </tr>
                        <tr>
                            <td><strong>URL Structure:</strong></td>
                            <td>
                                <code>/<?php echo esc_html($property_info['url_structure']['base']); ?>/</code> (accommodations)<br>
                                <code>/<?php echo esc_html($property_info['url_structure']['booking']); ?>/</code> (booking)
                            </td>
                        </tr>
                    </tbody>
                </table>
                
                <!-- Refresh Configuration Button -->
                <div style="margin-top: 15px; padding-top: 15px; border-top: 1px solid #ddd;">
                    <p><strong>Configuration Changed?</strong> If you changed the business type in your dashboard, click below to update the URL structure:</p>
                    <form method="post" style="display: inline; margin-right: 10px;">
                        <?php wp_nonce_field('zzbp_settings_nonce'); ?>
                        <button type="submit" name="zzbp_refresh_config" class="button button-primary">
                            🔄 Refresh Configuration
                        </button>
                    </form>
                    
                    <form method="post" style="display: inline;">
                        <?php wp_nonce_field('zzbp_settings_nonce'); ?>
                        <button type="submit" name="zzbp_force_clean_pages" class="button button-secondary" onclick="return confirm('This will delete all duplicate pages with plugin shortcodes. Are you sure?')">
                            🗑️ Force Clean Duplicate Pages
                        </button>
                    </form>
                    <p class="description" style="margin-top: 5px;">Use "Force Clean" if you still see duplicate pages after refresh.</p>
                </div>
            </div>
        </div>

        <!-- Auto-Created Pages -->
        <div class="postbox" style="margin-top: 20px;">
            <div class="postbox-header">
                <h2 class="hndle">📄 Auto-Created Pages</h2>
            </div>
            <div class="inside">
                <?php
                $accommodations_page_id = get_option('zzbp_accommodations_page_id');
                $booking_page_id = get_option('zzbp_booking_page_id');
                
                // Handle force create pages
                if (isset($_POST['zzbp_force_create_pages'])) {
                    $plugin = new ZeeZichtBookingPro();
                    if ($plugin->force_create_pages()) {
                        echo '<div class="notice notice-success inline"><p>✅ Pages created/updated successfully!</p></div>';
                        // Refresh the page IDs
                        $accommodations_page_id = get_option('zzbp_accommodations_page_id');
                        $booking_page_id = get_option('zzbp_booking_page_id');
                    } else {
                        echo '<div class="notice notice-error inline"><p>❌ Failed to create pages. Make sure you have a valid API connection.</p></div>';
                    }
                }
                ?>
                
                <p>The following pages should be automatically created for your booking system:</p>
                
                <ul>
                    <?php if ($accommodations_page_id): ?>
                    <li>
                        ✅ <strong><?php echo esc_html($property_info['settings']['booking']['accommodations_title']); ?></strong>
                        - <a href="<?php echo esc_url(get_permalink($accommodations_page_id)); ?>" target="_blank">View Page</a>
                        | <a href="<?php echo esc_url(get_edit_post_link($accommodations_page_id)); ?>">Edit</a>
                    </li>
                    <?php else: ?>
                    <li>❌ <strong>Accommodations page</strong> - Not created yet</li>
                    <?php endif; ?>
                    
                    <?php if ($booking_page_id): ?>
                    <li>
                        ✅ <strong><?php echo esc_html($property_info['settings']['booking']['page_title']); ?></strong>
                        - <a href="<?php echo esc_url(get_permalink($booking_page_id)); ?>" target="_blank">View Page</a>
                        | <a href="<?php echo esc_url(get_edit_post_link($booking_page_id)); ?>">Edit</a>
                    </li>
                    <?php else: ?>
                    <li>❌ <strong>Booking page</strong> - Not created yet</li>
                    <?php endif; ?>
                </ul>
                
                <?php if (!$accommodations_page_id || !$booking_page_id): ?>
                <form method="post" style="margin-top: 15px;">
                    <?php wp_nonce_field('zzbp_settings_nonce'); ?>
                    <button type="submit" name="zzbp_force_create_pages" class="button button-secondary">
                        🔧 Create/Update Pages Now
                    </button>
                </form>
                <?php endif; ?>
                
            </div>
        </div>
        <?php endif; ?>

        <!-- Debug Information -->
        <div class="postbox" style="margin-top: 20px;">
            <div class="postbox-header">
                <h2 class="hndle">🔧 Debug Information</h2>
            </div>
            <div class="inside">
                <p><strong>Plugin Version:</strong> <?php echo ZZBP_VERSION; ?></p>
                <p><strong>API Base:</strong> <code><?php echo ZZBP_API_BASE; ?></code></p>
                <p><strong>Current API Key:</strong> <code><?php echo $api_key ? substr($api_key, 0, 8) . '...' : 'Not set'; ?></code></p>
                
                <?php if ($property_info): ?>
                <details style="margin-top: 10px;">
                    <summary style="cursor: pointer; font-weight: bold;">View Raw Property Data</summary>
                    <pre style="background: #f1f1f1; padding: 10px; margin-top: 10px; overflow: auto; max-height: 300px; font-size: 11px;"><?php echo esc_html(json_encode($property_info, JSON_PRETTY_PRINT)); ?></pre>
                </details>
                <?php endif; ?>
            </div>
        </div>
    </div>
</div>

<style>
.zzbp-admin-container .postbox {
    border: 1px solid #c3c4c7;
    box-shadow: 0 1px 1px rgba(0,0,0,.04);
}

.zzbp-admin-container .postbox-header {
    border-bottom: 1px solid #c3c4c7;
    background: #f6f7f7;
}

.zzbp-admin-container .postbox-header h2 {
    font-size: 14px;
    padding: 8px 12px;
    margin: 0;
    line-height: 1.4;
}

.zzbp-admin-container .inside {
    padding: 12px;
}

.zzbp-admin-container .notice.inline {
    margin: 5px 0 15px 0;
    padding: 5px 10px;
}

.zzbp-admin-container code {
    background: #f1f1f1;
    padding: 2px 4px;
    border-radius: 3px;
    font-family: Consolas, Monaco, monospace;
}
</style>



=== FILE: ./templates/booking-form.php ===
<?php
/**
 * Modern Step-by-Step Booking Form Template
 * Inspired by competitor's excellent UX design
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

$accommodation_id = $atts['accommodation_id'] ?? $_GET['accommodation'] ?? '';
$show_accommodation_selector = ($atts['show_accommodation_selector'] ?? 'true') === 'true';

// Get accommodations for selector
$api = new ZZBP_Api();
$accommodations = $api->get_accommodations();

if (empty($accommodations)) {
    echo '<div class="zzbp-message error">Booking system is temporarily unavailable. Please try again later.</div>';
    return;
}

// Get property info for business details
$property_info = get_option('zzbp_property_info', []);
$business_settings = $property_info['settings']['business'] ?? [];

// Pre-select accommodation if specified
$selected_accommodation = null;
if ($accommodation_id) {
    foreach ($accommodations as $acc) {
        if ($acc['id'] === $accommodation_id) {
            $selected_accommodation = $acc;
            break;
        }
    }
}
?>

<!-- ZeeZicht Booking Pro - Encapsulated Styles -->
<div id="zzbp-booking-app" class="bg-gray-50 py-8 px-4 min-h-screen">
    <div class="max-w-7xl mx-auto">
        <div class="grid grid-cols-1 xl:grid-cols-3 lg:grid-cols-2 gap-8">
        
        <!-- Main Form Area -->
        <div class="xl:col-span-2 lg:col-span-1 bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden order-1">
            <div class="px-8 py-6 border-b border-gray-100">
                <h1 class="text-3xl font-semibold text-gray-900 mb-2">Prijsopgave</h1>
                <div class="text-gray-600" id="booking-dates-display">
                    Reservering van <strong id="display-checkin" class="text-gray-900">datum selecteren</strong> tot <strong id="display-checkout" class="text-gray-900">datum selecteren</strong>
                </div>
            </div>

            <!-- Messages Container -->
            <div class="zzbp-messages px-8"></div>
            
            <!-- Step-by-Step Form -->
            <form id="zzbp-booking-form" class="p-8">
                
                <!-- Step 1: Dates -->
                <div class="zzbp-step" data-step="1">
                    <h2 class="text-xl font-semibold text-gray-900 mb-2 flex items-center gap-2">
                        📅 Selecteer uw datums
                    </h2>
                    <div class="mb-8">
                        <!-- Airbnb-style date inputs -->
                        <div class="border border-gray-300 rounded-lg overflow-hidden grid grid-cols-2">
                            <div class="border-r border-gray-300">
                                <label for="check_in" class="block text-xs font-semibold text-gray-900 uppercase tracking-wide px-3 pt-3 pb-1">
                                    Check-in
                                </label>
                                <input type="date" id="check_in" name="check_in" required 
                                       min="<?php echo date('Y-m-d'); ?>"
                                       class="w-full px-3 pb-3 border-0 text-gray-900 text-base focus:outline-none focus:ring-0">
                            </div>
                            <div>
                                <label for="check_out" class="block text-xs font-semibold text-gray-900 uppercase tracking-wide px-3 pt-3 pb-1">
                                    Check-out
                                </label>
                                <input type="date" id="check_out" name="check_out" required 
                                       min="<?php echo date('Y-m-d', strtotime('+1 day')); ?>"
                                       class="w-full px-3 pb-3 border-0 text-gray-900 text-base focus:outline-none focus:ring-0">
                            </div>
                        </div>
                        
                        <div class="flex justify-end mt-6">
                            <button type="button" class="bg-rose-500 hover:bg-rose-600 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 hover:shadow-lg zzbp-next-step" data-next="2">
                                Volgende: Gezelschap →
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Step 2: Guests -->
                <div class="zzbp-step" data-step="2" style="display: none;">
                    <h2 class="text-xl font-semibold text-gray-900 mb-2 flex items-center gap-2">
                        👥 Gezelschap
                    </h2>
                    <p class="text-gray-600 mb-6">Geef eerst het aantal personen op voor deze reservering.</p>
                    
                    <div class="space-y-6 mb-8">
                        <div>
                            <label for="adults" class="block text-sm font-semibold text-gray-900 mb-2">
                                Volwassenen en kinderen (vanaf 12 jaar) *
                            </label>
                            <select id="adults" name="adults" required 
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                                <option value="">Selecteer aantal</option>
                                <option value="1">1 persoon</option>
                                <option value="2" selected>2 personen</option>
                                <option value="3">3 personen</option>
                                <option value="4">4 personen</option>
                                <option value="5">5 personen</option>
                                <option value="6">6 personen</option>
                                <option value="7">7 personen</option>
                                <option value="8">8 personen</option>
                            </select>
                        </div>
                        
                        <div>
                            <label for="children_under_12" class="block text-sm font-semibold text-gray-900 mb-2">
                                Kinderen tot 12 jaar
                            </label>
                            <select id="children_under_12" name="children_under_12"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                                <option value="0" selected>0 kinderen</option>
                                <option value="1">1 kind</option>
                                <option value="2">2 kinderen</option>
                                <option value="3">3 kinderen</option>
                                <option value="4">4 kinderen</option>
                                <option value="5">5 kinderen</option>
                            </select>
                        </div>
                        
                        <div>
                            <label for="children_0_3" class="block text-sm font-semibold text-gray-900 mb-2">
                                Kinderen 0 tot 3 jaar
                            </label>
                            <select id="children_0_3" name="children_0_3"
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                                <option value="0" selected>0 kinderen</option>
                                <option value="1">1 kind</option>
                                <option value="2">2 kinderen</option>
                                <option value="3">3 kinderen</option>
                            </select>
                        </div>
                        
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                            <p class="text-sm text-blue-800">
                                Voor deze accommodatie geldt een minimum van één persoon.
                            </p>
                        </div>
                        
                        <div class="flex justify-between items-center pt-6 border-t border-gray-200">
                            <button type="button" class="btn-secondary zzbp-prev-step" data-prev="1">
                                ← Vorige
                            </button>
                            <button type="button" class="btn-primary zzbp-next-step" data-next="3">
                                Volgende: Uw gegevens →
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Step 3: Contact Info -->
                <div class="zzbp-step" data-step="3" style="display: none;">
                    <h2 class="text-xl font-semibold text-gray-900 mb-2 flex items-center gap-2">
                        📝 Uw gegevens
                    </h2>
                    <p class="text-gray-600 mb-6">Vul uw contactgegevens in om de reservering te voltooien.</p>
                    
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label for="guest_name" class="block text-sm font-semibold text-gray-900 mb-2">
                                    Volledige naam *
                                </label>
                                <input type="text" id="guest_name" name="guest_name" required 
                                       placeholder="Voor- en achternaam"
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                            </div>
                            
                            <div>
                                <label for="guest_email" class="block text-sm font-semibold text-gray-900 mb-2">
                                    Email adres *
                                </label>
                                <input type="email" id="guest_email" name="guest_email" required 
                                       placeholder="uw@email.nl"
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                            </div>
                            
                            <div>
                                <label for="guest_phone" class="block text-sm font-semibold text-gray-900 mb-2">
                                    Telefoonnummer *
                                </label>
                                <input type="tel" id="guest_phone" name="guest_phone" required
                                       placeholder="+31 6 12345678"
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                            </div>
                            
                            <div>
                                <label for="guest_address" class="block text-sm font-semibold text-gray-900 mb-2">
                                    Adres
                                </label>
                                <input type="text" id="guest_address" name="guest_address" 
                                       placeholder="Straat en huisnummer"
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                            </div>
                        </div>
                        
                        <div>
                            <label for="special_requests" class="block text-sm font-semibold text-gray-900 mb-2">
                                Bijzondere wensen
                            </label>
                            <textarea id="special_requests" name="special_requests" rows="3" 
                                      placeholder="Eventuele bijzondere wensen of opmerkingen..."
                                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"></textarea>
                        </div>
                        
                        <div class="flex justify-between items-center pt-6 border-t border-gray-200">
                            <button type="button" class="bg-white border border-gray-300 text-gray-700 px-6 py-3 rounded-lg font-semibold hover:bg-gray-50 transition-colors zzbp-prev-step" data-prev="2">
                                ← Vorige
                            </button>
                            <button type="submit" class="btn-success px-8 flex items-center gap-2">
                                🎉 Reservering Bevestigen
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Hidden fields -->
                <input type="hidden" name="accommodation_id" value="<?php echo esc_attr($accommodation_id ?: ($selected_accommodation['id'] ?? '')); ?>">
                <input type="hidden" name="total_price" id="total_price" value="0">
                
            </form>
        </div>

        <!-- Sticky Sidebar -->
        <div class="xl:col-span-1 lg:col-span-1 order-2 lg:order-2">
            <div class="bg-white rounded-xl shadow-lg border border-gray-200 sticky top-6 h-fit">
                
                <!-- Accommodation Info -->
                <div class="p-6 border-b border-gray-100">
                    <?php 
                    // Debug: Check if we have accommodation data
                    $debug_accommodation = $selected_accommodation ?: ($accommodations[0] ?? null);
                    if ($debug_accommodation): ?>
                        <?php if (!empty($debug_accommodation['primary_image'])): ?>
                            <img src="<?php echo esc_url($debug_accommodation['primary_image']); ?>" 
                                 alt="<?php echo esc_attr($debug_accommodation['name']); ?>"
                                 class="w-full h-48 object-cover rounded-lg mb-4">
                        <?php else: ?>
                            <div class="w-full h-48 bg-gradient-to-br from-rose-500 to-rose-600 rounded-lg mb-4 flex items-center justify-center text-white text-2xl">
                                🏨 <?php echo esc_html($debug_accommodation['name']); ?>
                            </div>
                        <?php endif; ?>
                        <h3 class="text-lg font-semibold text-gray-900 mb-1"><?php echo esc_html($debug_accommodation['name']); ?></h3>
                        <p class="text-gray-600 text-sm capitalize"><?php echo esc_html(str_replace('_', ' ', $debug_accommodation['type'])); ?></p>
                        <p class="text-rose-600 font-semibold mt-2">€<?php echo number_format($debug_accommodation['base_price'], 2); ?> per nacht</p>
                    <?php else: ?>
                        <div class="w-full h-48 bg-gradient-to-br from-gray-400 to-gray-500 rounded-lg mb-4 flex items-center justify-center text-white text-2xl">
                            🏨 Accommodatie
                        </div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-1">Selecteer accommodatie</h3>
                        <p class="text-gray-600 text-sm">Geen accommodatie geselecteerd</p>
                        
                        <!-- Debug info -->
                        <div class="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded text-xs">
                            <strong>Debug:</strong><br>
                            Accommodations count: <?php echo count($accommodations); ?><br>
                            Selected ID: <?php echo esc_html($accommodation_id); ?><br>
                            <?php if (!empty($accommodations)): ?>
                                First accommodation: <?php echo esc_html($accommodations[0]['name'] ?? 'No name'); ?>
                            <?php endif; ?>
                        </div>
                    <?php endif; ?>
                </div>

                <!-- Booking Summary -->
                <div class="p-6">
                    <h4 class="font-semibold text-gray-900 mb-3">Verblijfsduur</h4>
                    <div class="text-sm text-gray-600 mb-6" id="summary-dates">
                        <span id="summary-checkin">Check-in</span> - <span id="summary-checkout">Check-out</span>
                        <div class="text-xs text-gray-500">(<span id="summary-nights">0</span> nachten)</div>
                    </div>

                    <h4 class="font-semibold text-gray-900 mb-3">Gezelschap</h4>
                    <div class="text-sm text-gray-600 space-y-1 mb-6" id="summary-guests">
                        <div>Volwassenen en kinderen (vanaf 12 jaar): <span id="summary-adults" class="font-medium">0</span></div>
                        <div>Kinderen tot 12 jaar: <span id="summary-children-12" class="font-medium">0</span></div>
                        <div>Kinderen 0 tot 3 jaar: <span id="summary-children-3" class="font-medium">0</span></div>
                    </div>

                    <h4 class="font-semibold text-gray-900 mb-3">Samenvatting</h4>
                    <div class="space-y-2">
                        <div class="flex justify-between text-sm">
                            <span>Totaal verblijf</span>
                            <span id="summary-base-price" class="font-medium">€ 0,00</span>
                        </div>
                        <div class="flex justify-between text-sm">
                            <span>Totaal opties en toeslagen</span>
                            <span id="summary-options-price" class="font-medium">€ 0,00</span>
                        </div>
                        <div class="border-t border-gray-200 pt-2 mt-4">
                            <div class="flex justify-between text-lg font-semibold text-gray-900">
                                <span>Totaalbedrag</span>
                                <span id="summary-total-price">€ 0,00</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        </div> <!-- End grid -->
    </div> <!-- End container -->
</div> <!-- End main wrapper -->



=== FILE: ./templates/parts/amenities.php ===
<?php
/**
 * Template Part: Amenities - SIMPLE VERSION LIKE OLD
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}

$amenities = $accommodation['amenities'] ?? ['wifi', 'parking', 'kitchen', 'tv', 'balcony', 'airco'];
?>

<div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
    <h2 class="text-2xl font-semibold text-gray-900 mb-6">Voorzieningen</h2>
    <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
        <?php foreach ($amenities as $amenity): ?>
        <div class="flex items-center gap-3">
            <span class="text-green-500">✓</span>
            <span class="text-gray-700 capitalize"><?php echo esc_html(str_replace('_', ' ', $amenity)); ?></span>
        </div>
        <?php endforeach; ?>
    </div>
</div>



=== FILE: ./templates/parts/availability-calendar.php ===
<?php
/**
 * Template Part: Availability Calendar - WORKING VERSION
 * 
 * With Flatpickr initialization like the old version
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}
?>

<div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
    <h2 class="text-2xl font-semibold text-gray-900 mb-6">Beschikbaarheid</h2>
    
    <!-- Calendar Container -->
    <div class="accommodation-calendar">
        <div id="accommodation-calendar-<?php echo esc_attr($accommodation['id'] ?? 'demo'); ?>"></div>
    </div>
</div>

<!-- Calendar Styling -->
<style>
/* Availability Calendar Styles */
.accommodation-calendar .flatpickr-calendar.inline {
    box-shadow: none !important;
    border: 0 !important;
    background: transparent !important;
    width: 100% !important;
}

.accommodation-calendar .flatpickr-months {
    background: #f9fafb !important;
    border-radius: 0.75rem 0.75rem 0 0 !important;
    padding: 1rem !important;
}

.accommodation-calendar .flatpickr-weekdays {
    background: #f3f4f6 !important;
    padding: 0.5rem 0 !important;
}

/* Modern square days with rounded corners */
.accommodation-calendar .flatpickr-day {
    width: 40px !important;
    height: 40px !important;
    line-height: 40px !important;
    border-radius: 6px !important;
    margin: 2px !important;
    transition: all 0.2s ease !important;
}

/* Available dates - green background - but NOT if selected */
.accommodation-calendar .flatpickr-day:not(.flatpickr-disabled):not(.prevMonthDay):not(.nextMonthDay):not(.selected):not(.startRange):not(.endRange):not(.inRange) {
    background-color: #22C55E !important;
    color: white !important;
    border-color: #16A34A !important;
}

/* Available dates hover - but NOT if selected */
.accommodation-calendar .flatpickr-day:not(.flatpickr-disabled):not(.prevMonthDay):not(.nextMonthDay):not(.selected):not(.startRange):not(.endRange):not(.inRange):hover {
    background-color: #16A34A !important;
    color: white !important;
    transform: scale(1.05) !important;
}

/* Disabled dates (unavailable) - dusty rose */
.accommodation-calendar .flatpickr-day.flatpickr-disabled {
    background-color: #E5C5C5 !important;
    color: #8B5A5A !important;
    opacity: 1 !important;
    cursor: not-allowed !important;
}

/* Past dates - greyed out (higher priority than disabled) */
.accommodation-calendar .flatpickr-day.past-date {
    background-color: #F3F4F6 !important;
    color: #9CA3AF !important;
    opacity: 0.6 !important;
    cursor: not-allowed !important;
}

/* Selection overrides green - blue for selected dates (highest priority) */
.accommodation-calendar .flatpickr-day.selected,
.accommodation-calendar .flatpickr-day.startRange,
.accommodation-calendar .flatpickr-day.endRange {
    background-color: #3B82F6 !important;
    border-color: #3B82F6 !important;
    color: white !important;
    transform: scale(1.05) !important;
}

/* Selected dates hover - stay blue */
.accommodation-calendar .flatpickr-day.selected:hover,
.accommodation-calendar .flatpickr-day.startRange:hover,
.accommodation-calendar .flatpickr-day.endRange:hover {
    background-color: #2563EB !important;
    border-color: #2563EB !important;
    color: white !important;
    transform: scale(1.05) !important;
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3) !important;
}

.accommodation-calendar .flatpickr-day.inRange {
    background-color: #DBEAFE !important;
    border-color: #BFDBFE !important;
    color: #1E40AF !important;
    transform: none !important;
}

/* In-range hover - stay light blue */
.accommodation-calendar .flatpickr-day.inRange:hover {
    background-color: #BFDBFE !important;
    border-color: #93C5FD !important;
    color: #1E40AF !important;
    transform: scale(1.02) !important;
}

/* Toon volgende maand dagen */
.accommodation-calendar .flatpickr-day.nextMonthDay,
.accommodation-calendar .flatpickr-day.prevMonthDay {
    display: block !important;
    visibility: visible !important;
    opacity: 0.4 !important;
    color: #9CA3AF !important;
    background-color: #F9FAFB !important;
}

/* Hover effect voor volgende/vorige maand dagen */
.accommodation-calendar .flatpickr-day.nextMonthDay:hover,
.accommodation-calendar .flatpickr-day.prevMonthDay:hover {
    opacity: 0.6 !important;
    background-color: #F3F4F6 !important;
}

/* Zorg dat alle dagen zichtbaar zijn */
.accommodation-calendar.show-next-month-days .flatpickr-day {
    display: block !important;
    visibility: visible !important;
}
</style>

<!-- JavaScript voor calendar -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const accommodationId = '<?php echo esc_js($accommodation['id'] ?? 'demo'); ?>';
    const accommodationName = '<?php echo esc_js($accommodation['name'] ?? 'Demo'); ?>';
    const calendarContainer = document.getElementById('accommodation-calendar-' + accommodationId);
    
    if (calendarContainer && !calendarContainer.hasAttribute('data-initialized')) {
        calendarContainer.setAttribute('data-initialized', 'true');
        initializeAccommodationCalendar(calendarContainer, accommodationId, accommodationName);
    }
});

function initializeAccommodationCalendar(calendarContainer, accommodationId, accommodationName) {
    console.log('🗓️ Initializing calendar for:', accommodationName, 'ID:', accommodationId);
    
    // Load Flatpickr if not already loaded
    if (!window.flatpickr) {
        loadFlatpickrAndInitCalendar(calendarContainer, accommodationId, accommodationName);
    } else {
        createAccommodationCalendar(calendarContainer, accommodationId, accommodationName);
    }
}

function loadFlatpickrAndInitCalendar(container, accommodationId, accommodationName) {
    // Load JS
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/flatpickr';
    script.onload = function() {
        // Load Dutch locale
        const localeScript = document.createElement('script');
        localeScript.src = 'https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/nl.js';
        localeScript.onload = function() {
            if (window.flatpickr && window.flatpickr.l10ns && window.flatpickr.l10ns.nl) {
                window.flatpickr.localize(window.flatpickr.l10ns.nl);
            }
            createAccommodationCalendar(container, accommodationId, accommodationName);
        };
        document.head.appendChild(localeScript);
    };
    document.head.appendChild(script);
}

function createAccommodationCalendar(container, accommodationId, accommodationName) {
    // Mock availability data - in real implementation this would come from API
    const availabilityData = {
        unavailable_dates: [
            '2024-12-25', '2024-12-26', '2024-12-31', '2025-01-01',
            '2025-01-15', '2025-01-16', '2025-01-17'
        ]
    };

    container.innerHTML = `
        <!-- Selected Dates Display -->
        <div id="selected-dates-display-${accommodationId}" class="hidden mb-4 p-3 bg-blue-50 rounded-lg border border-blue-200">
            <div class="text-sm font-medium text-blue-900 mb-1">Geselecteerde periode</div>
            <div id="selected-period-text-${accommodationId}" class="text-blue-700 text-sm"></div>
            <div class="flex justify-between items-center mt-2">
                <span class="text-xs text-blue-600"><span id="selected-nights-${accommodationId}">0</span> nachten</span>
                <button id="clear-selection-${accommodationId}" class="text-xs text-blue-500 hover:text-blue-700">Wissen</button>
            </div>
        </div>

        <!-- Calendar Container -->
        <div id="calendar-flatpickr-${accommodationId}" class="border border-gray-200 rounded-lg overflow-hidden"></div>

        <!-- Legend -->
        <div class="mt-4 flex flex-wrap gap-4 text-sm">
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 rounded" style="background-color: #22C55E;"></div>
                <span class="text-gray-700 font-medium">Beschikbaar</span>
            </div>
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 rounded" style="background-color: #E5C5C5;"></div>
                <span class="text-gray-700 font-medium">Bezet</span>
            </div>
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 rounded" style="background-color: #3B82F6;"></div>
                <span class="text-gray-700 font-medium">Geselecteerd</span>
            </div>
        </div>
    `;

    // Wait a moment for HTML to be fully rendered
    setTimeout(function() {
        // Initialize Flatpickr
        const flatpickrContainer = container.querySelector('#calendar-flatpickr-' + accommodationId);
        const selectedDisplay = container.querySelector('#selected-dates-display-' + accommodationId);
        const periodText = container.querySelector('#selected-period-text-' + accommodationId);
        const nightsSpan = container.querySelector('#selected-nights-' + accommodationId);
        const clearBtn = container.querySelector('#clear-selection-' + accommodationId);

        if (!flatpickrContainer) {
            console.error('Flatpickr container not found');
            return;
        }

        let selectedDates = [];
        const unavailableDates = availabilityData.unavailable_dates || [];

        // Initialize Flatpickr
        const fp = window.flatpickr(flatpickrContainer, {
            mode: 'range',
            inline: true,
            dateFormat: 'Y-m-d',
            minDate: 'today',
            maxDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000),
            disable: unavailableDates.map(dateStr => new Date(dateStr)),
            locale: 'nl',
            showMonths: window.innerWidth >= 768 ? 2 : 1,
            onChange: function(dates) {
                handleDateSelection(dates, selectedDisplay, periodText, nightsSpan);
            },
            onDayCreate: function(dObj, dStr, fp, dayElem) {
                const date = dayElem.dateObj;
                const today = new Date();
                today.setHours(0, 0, 0, 0);

                if (date < today) {
                    dayElem.classList.add('past-date');
                }
            }
        });

        // Store calendar instance globally
        window.calendarInstance = fp;
        console.log('Calendar initialized successfully');

        // Clear selection button
        clearBtn.addEventListener('click', function() {
            fp.clear();
            selectedDisplay.classList.add('hidden');
        });
    }, 50); // Small delay to ensure HTML is rendered
}

function handleDateSelection(dates, selectedDisplay, periodText, nightsSpan) {
    if (dates.length === 2) {
        const startDate = dates[0];
        const endDate = dates[1];
        const nights = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));
        
        const startStr = formatDate(startDate);
        const endStr = formatDate(endDate);
        
        periodText.textContent = startStr + ' - ' + endStr;
        nightsSpan.textContent = nights;
        selectedDisplay.classList.remove('hidden');
        
        console.log('Selected period:', startStr, 'to', endStr, '(' + nights + ' nights)');
    } else {
        selectedDisplay.classList.add('hidden');
    }
}

function formatDate(date) {
    return date.toLocaleDateString('nl-NL', {
        day: 'numeric',
        month: 'long',
        year: 'numeric'
    });
}
</script>



=== FILE: ./templates/parts/booking-modal.php ===
<?php
/**
 * Template Part: Booking Modal
 * 
 * CLEAN, REUSABLE, NO INLINE STYLES
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}
?>

<!-- Booking Modal -->
<div id="booking-modal" class="booking-modal-overlay">
    <div class="booking-modal-content">
        <!-- Modal Header -->
        <div class="p-6 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-bold text-gray-900">Reserveer <?php echo esc_html($accommodation['name']); ?></h2>
                <button onclick="closeBookingModal()" class="text-gray-400 hover:text-gray-600 text-2xl">&times;</button>
            </div>
            
            <!-- Progress Bar -->
            <div class="w-full bg-gray-200 rounded-full h-2 mt-4">
                <div id="progress-bar" class="bg-rose-500 h-2 rounded-full transition-all duration-500 ease-out" style="width: 25%"></div>
            </div>
        </div>
        
        <!-- Modal Content -->
        <div class="p-6">
            <form id="booking-form">
                
                <!-- Step 1: Date Selection -->
                <div id="step-1" class="booking-step">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Selecteer datums</h3>
                        <p class="text-gray-600">Wanneer wil je verblijven?</p>
                    </div>
                    
                    <!-- Selected Dates Display -->
                    <div id="modal-selected-dates" class="modal-selected-dates hidden">
                        <div class="text-sm font-medium text-blue-900 mb-1">Geselecteerde periode</div>
                        <div id="modal-period-text" class="text-blue-700 text-sm"></div>
                        <div class="flex justify-between items-center mt-2">
                            <span class="text-xs text-blue-600"><span id="modal-nights">0</span> nachten</span>
                            <button type="button" id="modal-clear-selection" class="text-xs text-blue-500 hover:text-blue-700 bg-transparent border-0 cursor-pointer">Wissen</button>
                        </div>
                    </div>
                    
                    <!-- Modal Calendar -->
                    <div class="modal-calendar" style="margin-bottom: 1rem;">
                        <div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
                            <h2 class="text-2xl font-semibold text-gray-900 mb-6">Beschikbaarheid</h2>
                            
                            <!-- Calendar Container -->
                            <div class="accommodation-calendar">
                                <div id="modal-accommodation-calendar-<?php echo esc_attr($accommodation['id'] ?? 'demo'); ?>"></div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Modal Calendar JavaScript -->
                    <script>
                    function initModalCalendar() {
                        const accommodationId = '<?php echo esc_js($accommodation['id'] ?? 'demo'); ?>';
                        const calendarContainer = document.getElementById('modal-accommodation-calendar-' + accommodationId);
                        
                        if (!calendarContainer || calendarContainer.hasAttribute('data-modal-initialized')) {
                            return;
                        }
                        
                        calendarContainer.setAttribute('data-modal-initialized', 'true');
                        console.log('🗓️ Initializing modal calendar for:', accommodationId);
                        
                        // Wait for Flatpickr to be available
                        if (!window.flatpickr) {
                            setTimeout(initModalCalendar, 200);
                            return;
                        }
                        
                        // Mock availability data
                        const availabilityData = {
                            unavailable_dates: [
                                '2024-12-25', '2024-12-26', '2024-12-31', '2025-01-01',
                                '2025-01-15', '2025-01-16', '2025-01-17'
                            ]
                        };

                        calendarContainer.innerHTML = `
                            <!-- Selected Dates Display -->
                            <div id="modal-selected-dates-display-${accommodationId}" class="hidden mb-4 p-3 bg-blue-50 rounded-lg border border-blue-200">
                                <div class="text-sm font-medium text-blue-900 mb-1">Geselecteerde periode</div>
                                <div id="modal-selected-period-text-${accommodationId}" class="text-blue-700 text-sm"></div>
                                <div class="flex justify-between items-center mt-2">
                                    <span class="text-xs text-blue-600"><span id="modal-selected-nights-${accommodationId}">0</span> nachten</span>
                                    <button id="modal-clear-selection-${accommodationId}" class="text-xs text-blue-500 hover:text-blue-700">Wissen</button>
                                </div>
                            </div>

                            <!-- Calendar Container -->
                            <div id="modal-calendar-flatpickr-${accommodationId}" class="border border-gray-200 rounded-lg overflow-hidden"></div>

                            <!-- Legend -->
                            <div class="mt-4 flex flex-wrap gap-4 text-sm">
                                <div class="flex items-center gap-2">
                                    <div class="w-4 h-4 rounded" style="background-color: #22C55E;"></div>
                                    <span class="text-gray-700 font-medium">Beschikbaar</span>
                                </div>
                                <div class="flex items-center gap-2">
                                    <div class="w-4 h-4 rounded" style="background-color: #E5C5C5;"></div>
                                    <span class="text-gray-700 font-medium">Bezet</span>
                                </div>
                                <div class="flex items-center gap-2">
                                    <div class="w-4 h-4 rounded" style="background-color: #3B82F6;"></div>
                                    <span class="text-gray-700 font-medium">Geselecteerd</span>
                                </div>
                            </div>
                        `;

                        // Wait a moment for HTML to be fully rendered
                        setTimeout(function() {
                            const flatpickrContainer = calendarContainer.querySelector('#modal-calendar-flatpickr-' + accommodationId);
                            const selectedDisplay = calendarContainer.querySelector('#modal-selected-dates-display-' + accommodationId);
                            const periodText = calendarContainer.querySelector('#modal-selected-period-text-' + accommodationId);
                            const nightsSpan = calendarContainer.querySelector('#modal-selected-nights-' + accommodationId);
                            const clearBtn = calendarContainer.querySelector('#modal-clear-selection-' + accommodationId);

                            if (!flatpickrContainer) {
                                console.error('Modal Flatpickr container not found');
                                return;
                            }

                            const unavailableDates = availabilityData.unavailable_dates || [];

                            // Initialize Flatpickr
                            const fp = window.flatpickr(flatpickrContainer, {
                                mode: 'range',
                                inline: true,
                                dateFormat: 'Y-m-d',
                                minDate: 'today',
                                maxDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000),
                                disable: unavailableDates.map(dateStr => new Date(dateStr)),
                                locale: 'nl',
                                showMonths: window.innerWidth >= 768 ? 2 : 1,
                                onChange: function(dates) {
                                    handleModalDateSelection(dates, selectedDisplay, periodText, nightsSpan);
                                },
                                onDayCreate: function(dObj, dStr, fp, dayElem) {
                                    const date = dayElem.dateObj;
                                    const today = new Date();
                                    today.setHours(0, 0, 0, 0);

                                    if (date < today) {
                                        dayElem.classList.add('past-date');
                                    }
                                }
                            });

                            // Store modal calendar instance
                            window.modalCalendarInstance = fp;
                            console.log('Modal calendar initialized successfully');

                            // Clear selection button
                            clearBtn.addEventListener('click', function() {
                                fp.clear();
                                selectedDisplay.classList.add('hidden');
                            });
                        }, 50);
                    }

                    function handleModalDateSelection(dates, selectedDisplay, periodText, nightsSpan) {
                        if (dates.length === 2) {
                            const startDate = dates[0];
                            const endDate = dates[1];
                            const nights = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));
                            
                            const startStr = formatDate(startDate);
                            const endStr = formatDate(endDate);
                            
                            periodText.textContent = startStr + ' - ' + endStr;
                            nightsSpan.textContent = nights;
                            selectedDisplay.classList.remove('hidden');
                            
                            // Update hidden form inputs
                            const modalCheckIn = document.getElementById('modal-checkin');
                            const modalCheckOut = document.getElementById('modal-checkout');
                            if (modalCheckIn) modalCheckIn.value = startDate.toISOString().split('T')[0];
                            if (modalCheckOut) modalCheckOut.value = endDate.toISOString().split('T')[0];
                            
                            console.log('Modal selected period:', startStr, 'to', endStr, '(' + nights + ' nights)');
                        } else {
                            selectedDisplay.classList.add('hidden');
                        }
                    }

                    // Initialize modal calendar when modal opens
                    document.addEventListener('DOMContentLoaded', function() {
                        // Override the openBookingModal function to initialize calendar
                        const originalOpenBookingModal = window.openBookingModal;
                        window.openBookingModal = function() {
                            if (originalOpenBookingModal) {
                                originalOpenBookingModal();
                            }
                            setTimeout(initModalCalendar, 100);
                        };
                    });
                    </script>
                    
                    <!-- Hidden inputs for form data -->
                    <input type="hidden" id="modal-checkin" name="checkin">
                    <input type="hidden" id="modal-checkout" name="checkout">
                </div>
                
                <!-- Step 2: Guest Selection -->
                <div id="step-2" class="booking-step hidden">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Kies gasten</h3>
                        <p class="text-gray-600">Hoeveel gasten verblijven er?</p>
                    </div>
                    
                    <div class="space-y-4">
                        <div class="flex items-center justify-between py-4">
                            <div>
                                <p class="font-medium">Volwassenen</p>
                                <p class="text-sm text-gray-500">13 jaar en ouder</p>
                            </div>
                            <div class="flex items-center gap-3">
                                <button type="button" onclick="updateGuestCount('adults', false)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">−</span>
                                </button>
                                <span id="adults-count" class="w-8 text-center font-medium">2</span>
                                <button type="button" onclick="updateGuestCount('adults', true)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">+</span>
                                </button>
                            </div>
                        </div>
                        
                        <div class="border-t border-gray-200"></div>
                        
                        <div class="flex items-center justify-between py-4">
                            <div>
                                <p class="font-medium">Kinderen</p>
                                <p class="text-sm text-gray-500">2-12 jaar</p>
                            </div>
                            <div class="flex items-center gap-3">
                                <button type="button" onclick="updateGuestCount('children', false)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">−</span>
                                </button>
                                <span id="children-count" class="w-8 text-center font-medium">0</span>
                                <button type="button" onclick="updateGuestCount('children', true)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">+</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Step 3: Contact Details -->
                <div id="step-3" class="booking-step hidden">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Jouw gegevens</h3>
                        <p class="text-gray-600">We hebben wat gegevens nodig om je reservering te voltooien</p>
                    </div>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Volledige naam</label>
                            <input type="text" id="guest-name" name="name" required
                                   class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                                   placeholder="Voer je volledige naam in">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">E-mailadres</label>
                            <input type="email" id="guest-email" name="email" required
                                   class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                                   placeholder="Voer je e-mailadres in">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Telefoonnummer</label>
                            <input type="tel" id="guest-phone" name="phone" required
                                   class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                                   placeholder="Voer je telefoonnummer in">
                        </div>
                    </div>
                </div>
                
                <!-- Step 4: Confirmation -->
                <div id="step-4" class="booking-step hidden">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Bevestig reservering</h3>
                        <p class="text-gray-600">Controleer je reserveringsgegevens</p>
                    </div>
                    
                    <div class="bg-gray-50 rounded-lg p-6 space-y-4">
                        <div class="flex justify-between">
                            <span>Datums</span>
                            <span id="confirm-dates" class="font-medium"></span>
                        </div>
                        <div class="flex justify-between">
                            <span>Gasten</span>
                            <span id="confirm-guests" class="font-medium"></span>
                        </div>
                        
                        <div class="border-t border-gray-300 pt-4"></div>
                        
                        <div class="space-y-2">
                            <div class="flex justify-between">
                                <span>€<?php echo number_format($accommodation['base_price'] ?? 150, 0); ?> × <span id="confirm-nights">0</span> nachten</span>
                                <span id="confirm-subtotal">€0</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Schoonmaakkosten</span>
                                <span>€25</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Servicekosten</span>
                                <span id="confirm-service-fee">€0</span>
                            </div>
                        </div>
                        
                        <div class="border-t border-gray-300 pt-4"></div>
                        
                        <div class="flex justify-between font-semibold text-lg">
                            <span>Totaal</span>
                            <span id="confirm-total">€25</span>
                        </div>
                    </div>
                </div>
                
            </form>
        </div>
        
        <!-- Modal Footer -->
        <div class="p-6 border-t border-gray-200">
            <div class="flex justify-between">
                <button type="button" id="prev-btn" onclick="prevStep()" 
                        class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed">
                    <span>←</span> Terug
                </button>
                
                <button type="button" id="next-btn" onclick="nextStep()" 
                        class="px-6 py-3 bg-gradient-to-r from-rose-500 to-rose-600 text-white rounded-lg hover:from-rose-600 hover:to-rose-700 flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed">
                    Volgende <span>→</span>
                </button>
                
                <button type="button" id="submit-btn" onclick="submitBooking()" 
                        class="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 hidden">
                    Bevestig Reservering
                </button>
            </div>
        </div>
    </div>
</div>



=== FILE: ./templates/parts/booking-sidebar.php ===
<?php
/**
 * Template Part: Booking Sidebar
 * 
 * CLEAN, REUSABLE, NO INLINE STYLES
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}
?>

<div class="sticky top-6">
    <div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100">
        <div class="mb-6">
            <div class="text-2xl font-bold text-gray-900">€<?php echo number_format($accommodation['base_price'] ?? 150, 0); ?></div>
            <p class="text-gray-600">per nacht</p>
        </div>
        
        <div class="space-y-4 mb-6">
            <!-- Date Range Picker -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Check-in & Check-out</label>
                <input type="text" id="date-range-picker" name="date_range" 
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                       placeholder="Selecteer periode" readonly>
                <!-- Hidden inputs for form submission -->
                <input type="hidden" id="check-in-date" name="check_in">
                <input type="hidden" id="check-out-date" name="check_out">
            </div>
            
            <!-- Guests -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Gasten</label>
                <select id="guests-count" name="guests" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500">
                    <option value="1">1 gast</option>
                    <option value="2" selected>2 gasten</option>
                    <option value="3">3 gasten</option>
                    <option value="4">4 gasten</option>
                    <option value="5">5 gasten</option>
                    <option value="6">6 gasten</option>
                </select>
            </div>
        </div>
        
        <!-- Price Breakdown -->
        <div id="price-breakdown" class="hidden mb-6 p-4 bg-gray-50 rounded-lg">
            <div class="flex justify-between text-sm mb-2">
                <span>€<?php echo number_format($accommodation['base_price'] ?? 150, 0); ?> × <span id="nights-count">0</span> nachten</span>
                <span id="subtotal">€0</span>
            </div>
            <div class="flex justify-between text-sm text-gray-600 mt-1">
                <span>Schoonmaakkosten</span>
                <span>€25</span>
            </div>
            <div class="border-t border-gray-300 mt-2 pt-2 flex justify-between font-semibold">
                <span>Totaal</span>
                <span id="total-price">€25</span>
            </div>
        </div>
        
        <button id="booking-submit-btn" onclick="openBookingModal()" 
                class="w-full bg-gradient-to-br from-rose-400 via-rose-500 to-rose-600 hover:from-green-600 hover:to-green-700 text-white font-semibold py-4 px-6 rounded-2xl transition-all duration-200 hover:-translate-y-0.5 hover:shadow-xl">
            Reserveer Nu
        </button>
        
        <div class="pt-4 border-t border-gray-200 mt-6">
            <p class="text-sm text-gray-600">Host: ZeeZicht Media</p>
            <p class="text-sm text-gray-600">Phone: +31 123 456 789</p>
        </div>
    </div>
</div>



=== FILE: ./templates/parts/description.php ===
<?php
/**
 * Template Part: Description - SIMPLE VERSION LIKE OLD
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}
?>

<div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
    <h2 class="text-2xl font-semibold text-gray-900 mb-4">Beschrijving</h2>
    <p class="text-gray-700 leading-relaxed">
        <?php echo esc_html($accommodation['description'] ?? 'Welkom in onze prachtige accommodatie! Perfect voor een ontspannen verblijf.'); ?>
    </p>
</div>



=== FILE: ./templates/parts/hero-image.php ===
<?php
/**
 * Template Part: Hero Image
 * 
 * CLEAN, REUSABLE, NO INLINE STYLES
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}
?>

<div class="container mx-auto px-4 py-6">
    <div class="relative overflow-hidden rounded-2xl group" style="height: 70vh;">
        <img 
            src="<?php echo esc_url($accommodation['hero_image'] ?? 'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80'); ?>" 
            alt="<?php echo esc_attr($accommodation['name'] ?? 'Accommodation'); ?>"
            class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
        >
        
        <!-- Gradient Overlay -->
        <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"></div>
        
        <!-- Content Overlay -->
        <div class="absolute bottom-0 left-0 right-0 p-8 text-white">
            <div class="max-w-4xl">
                <h1 class="text-4xl md:text-6xl font-bold mb-4 leading-tight">
                    <?php echo esc_html($accommodation['name'] ?? 'Zeezicht Suite'); ?>
                </h1>
                <p class="text-xl md:text-2xl text-gray-200 mb-6">
                    <?php echo esc_html($accommodation['subtitle'] ?? 'Luxe accommodatie met adembenemend zeezicht'); ?>
                </p>
                <div class="flex items-center space-x-6 text-lg">
                    <span class="flex items-center">
                        <i data-lucide="map-pin" class="w-5 h-5 mr-2"></i>
                        <?php echo esc_html($accommodation['location'] ?? 'Zeeland, Nederland'); ?>
                    </span>
                    <span class="flex items-center">
                        <i data-lucide="users" class="w-5 h-5 mr-2"></i>
                        <?php echo esc_html($accommodation['max_guests'] ?? '4'); ?> gasten
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>



=== FILE: ./templates/parts/photo-gallery.php ===
<?php
/**
 * Template Part: Photo Gallery - WORKING VERSION
 * 
 * With modal functionality like the old version
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}

$photos = $accommodation['photos'] ?? [];
?>

<div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
    <h2 class="text-2xl font-semibold text-gray-900 mb-6">Foto's</h2>
    
    <?php if (!empty($photos) && count($photos) > 0): ?>
        <!-- Photo Grid -->
        <div class="grid grid-cols-2 md:grid-cols-3 gap-4" id="photo-gallery">
            <?php foreach ($photos as $index => $photo_url): ?>
                <?php 
                // Fix photo URL
                $fixed_photo_url = $photo_url;
                if (strpos($fixed_photo_url, 'http') !== 0 && strpos($fixed_photo_url, '/uploads/') === 0) {
                    $fixed_photo_url = 'http://localhost:2121' . $fixed_photo_url;
                }
                ?>
                <div class="gallery-item" onclick="openPhotoModal(<?php echo $index; ?>)">
                    <img 
                        src="<?php echo esc_url($fixed_photo_url); ?>" 
                        alt="<?php echo esc_attr($accommodation['name']); ?> foto <?php echo $index + 1; ?>"
                        class="gallery-image"
                        onerror="this.parentElement.style.display='none'"
                    />
                </div>
            <?php endforeach; ?>
        </div>
    
        <!-- Photo count indicator -->
        <div class="mt-4 text-center">
            <span class="text-sm text-gray-600">
                <?php echo count($photos); ?> foto's
            </span>
            <button onclick="openPhotoModal(0)" class="ml-4 text-rose-600 hover:text-rose-700 font-semibold text-sm">
                Bekijk alle foto's →
            </button>
        </div>
        
        <!-- Photo Modal -->
        <div id="photo-modal" style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.9); z-index: 9999; display: none; align-items: center; justify-content: center;">
            <div style="position: relative; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; padding: 1rem;">
                <!-- Close Button -->
                <button onclick="closePhotoModal()" 
                        style="position: absolute; top: 1.5rem; right: 1.5rem; z-index: 10000; background: rgba(255,255,255,0.2); border: none; border-radius: 50%; padding: 0.75rem; cursor: pointer; transition: all 0.2s;">
                    <svg style="width: 1.5rem; height: 1.5rem; color: white;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
                
                <!-- Previous Button -->
                <button onclick="previousPhoto()" 
                        style="position: absolute; left: 1.5rem; top: 50%; transform: translateY(-50%); z-index: 10000; background: rgba(255,255,255,0.2); border: none; border-radius: 50%; padding: 0.75rem; cursor: pointer; transition: all 0.2s;">
                    <svg style="width: 1.5rem; height: 1.5rem; color: white;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                </button>
                
                <!-- Next Button -->
                <button onclick="nextPhoto()" 
                        style="position: absolute; right: 1.5rem; top: 50%; transform: translateY(-50%); z-index: 10000; background: rgba(255,255,255,0.2); border: none; border-radius: 50%; padding: 0.75rem; cursor: pointer; transition: all 0.2s;">
                    <svg style="width: 1.5rem; height: 1.5rem; color: white;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                </button>
                
                <!-- Main Image -->
                <div style="max-width: 90%; max-height: 90%; display: flex; align-items: center; justify-content: center;">
                    <img id="modal-image" src="" alt="" style="max-width: 100%; max-height: 100%; object-fit: contain; border-radius: 0.5rem; box-shadow: 0 10px 25px rgba(0,0,0,0.5);">
                </div>
                
                <!-- Photo Counter -->
                <div style="position: absolute; bottom: 1.5rem; left: 50%; transform: translateX(-50%); background: rgba(0,0,0,0.7); color: white; padding: 0.5rem 1rem; border-radius: 1.5rem; font-size: 0.875rem;">
                    <span id="photo-counter">1 / <?php echo count($photos); ?></span>
                </div>
                
                <!-- Thumbnails -->
                <div style="position: absolute; bottom: 5rem; left: 50%; transform: translateX(-50%); display: flex; gap: 0.5rem; max-width: 20rem; overflow-x: auto; padding: 0.5rem;" id="thumbnails-container">
                    <?php foreach ($photos as $index => $photo_url): ?>
                        <?php 
                        $fixed_photo_url = $photo_url;
                        if (strpos($fixed_photo_url, 'http') !== 0 && strpos($fixed_photo_url, '/uploads/') === 0) {
                            $fixed_photo_url = 'http://localhost:2121' . $fixed_photo_url;
                        }
                        ?>
                        <img src="<?php echo esc_url($fixed_photo_url); ?>" 
                             alt="Thumbnail <?php echo $index + 1; ?>"
                             style="width: 4rem; height: 4rem; object-fit: cover; border-radius: 0.25rem; cursor: pointer; opacity: 0.5; transition: opacity 0.2s; flex-shrink: 0;"
                             class="thumbnail"
                             data-index="<?php echo $index; ?>"
                             onclick="goToPhoto(<?php echo $index; ?>)"
                             onmouseover="this.style.opacity='1'"
                             onmouseout="this.style.opacity='0.5'">
                    <?php endforeach; ?>
                </div>
            </div>
        </div>
        
        <!-- JavaScript voor modal -->
        <script>
        // Photo Gallery Modal
        const photos = <?php echo json_encode(array_map(function($url) {
            return strpos($url, 'http') !== 0 && strpos($url, '/uploads/') === 0 ? 'http://localhost:2121' . $url : $url;
        }, $photos)); ?>;

        let currentPhotoIndex = 0;

        function openPhotoModal(index = 0) {
            currentPhotoIndex = index;
            const modal = document.getElementById('photo-modal');
            const modalImage = document.getElementById('modal-image');
            const photoCounter = document.getElementById('photo-counter');
            
            if (photos.length > 0) {
                modalImage.src = photos[currentPhotoIndex];
                photoCounter.textContent = `${currentPhotoIndex + 1} / ${photos.length}`;
                modal.style.display = 'flex';
                document.body.style.overflow = 'hidden';
                
                updateThumbnails();
            }
        }

        function closePhotoModal() {
            const modal = document.getElementById('photo-modal');
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        function nextPhoto() {
            currentPhotoIndex = (currentPhotoIndex + 1) % photos.length;
            updateModalPhoto();
        }

        function previousPhoto() {
            currentPhotoIndex = (currentPhotoIndex - 1 + photos.length) % photos.length;
            updateModalPhoto();
        }

        function goToPhoto(index) {
            currentPhotoIndex = index;
            updateModalPhoto();
        }

        function updateModalPhoto() {
            const modalImage = document.getElementById('modal-image');
            const photoCounter = document.getElementById('photo-counter');
            
            modalImage.src = photos[currentPhotoIndex];
            photoCounter.textContent = `${currentPhotoIndex + 1} / ${photos.length}`;
            updateThumbnails();
        }

        function updateThumbnails() {
            const thumbnails = document.querySelectorAll('.thumbnail');
            thumbnails.forEach((thumb, index) => {
                if (index === currentPhotoIndex) {
                    thumb.style.opacity = '1';
                    thumb.style.border = '2px solid white';
                } else {
                    thumb.style.opacity = '0.5';
                    thumb.style.border = 'none';
                }
            });
        }

        // Keyboard navigation
        document.addEventListener('keydown', function(e) {
            const modal = document.getElementById('photo-modal');
            if (modal.style.display === 'flex') {
                if (e.key === 'ArrowRight') nextPhoto();
                if (e.key === 'ArrowLeft') previousPhoto();
                if (e.key === 'Escape') closePhotoModal();
            }
        });
        </script>
        
        <!-- CSS voor gallery -->
        <style>
        .gallery-item {
            position: relative;
            overflow: hidden;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: transform 0.2s ease;
            aspect-ratio: 1;
        }
        
        .gallery-item:hover {
            transform: scale(1.02);
        }
        
        .gallery-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        
        .gallery-item:hover .gallery-image {
            transform: scale(1.1);
        }
        </style>
        
    <?php else: ?>
        <p class="text-gray-500 text-center py-8">Geen foto's beschikbaar</p>
    <?php endif; ?>
</div>



=== FILE: ./templates/parts/property-header.php ===
<?php
/**
 * Template Part: Property Header
 * 
 * CLEAN, REUSABLE, NO INLINE STYLES
 */

global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;

if (!$accommodation) {
    return;
}
?>

<div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
    <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between mb-6">
        <div class="flex-1">
            <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-2">
                <?php echo esc_html($accommodation['name'] ?? 'Zeezicht Suite'); ?>
            </h1>
            <p class="text-lg text-gray-600 mb-4">
                <?php echo esc_html($accommodation['subtitle'] ?? 'Luxe accommodatie met adembenemend zeezicht'); ?>
            </p>
            <div class="flex items-center space-x-6 text-gray-700">
                <span class="flex items-center">
                    <i data-lucide="map-pin" class="w-5 h-5 mr-2"></i>
                    <?php echo esc_html($accommodation['location'] ?? 'Zeeland, Nederland'); ?>
                </span>
                <span class="flex items-center">
                    <i data-lucide="users" class="w-5 h-5 mr-2"></i>
                    <?php echo esc_html($accommodation['max_guests'] ?? '4'); ?> gasten
                </span>
                <span class="flex items-center">
                    <i data-lucide="bed" class="w-5 h-5 mr-2"></i>
                    <?php echo esc_html($accommodation['bedrooms'] ?? '2'); ?> slaapkamers
                </span>
            </div>
        </div>
        
        <div class="mt-6 lg:mt-0 lg:ml-8">
            <div class="flex items-center space-x-4">
                <div class="text-right">
                    <div class="text-3xl font-bold text-gray-900">
                        €<?php echo number_format($accommodation['base_price'] ?? 150, 0); ?>
                    </div>
                    <div class="text-gray-600">per nacht</div>
                </div>
                <div class="flex items-center space-x-1">
                    <?php for ($i = 1; $i <= 5; $i++): ?>
                        <i data-lucide="star" class="w-4 h-4 <?php echo $i <= ($accommodation['rating'] ?? 5) ? 'text-yellow-400 fill-current' : 'text-gray-300'; ?>"></i>
                    <?php endfor; ?>
                    <span class="ml-2 text-sm text-gray-600">(<?php echo esc_html($accommodation['reviews_count'] ?? '24'); ?> reviews)</span>
                </div>
            </div>
        </div>
    </div>
    
    <div class="border-t border-gray-200 pt-6">
        <div class="grid grid-cols-2 lg:grid-cols-4 gap-4">
            <div class="text-center p-4 bg-gray-50 rounded-lg">
                <i data-lucide="wifi" class="w-6 h-6 mx-auto mb-2 text-green-600"></i>
                <div class="text-sm font-medium">Gratis WiFi</div>
            </div>
            <div class="text-center p-4 bg-gray-50 rounded-lg">
                <i data-lucide="car" class="w-6 h-6 mx-auto mb-2 text-blue-600"></i>
                <div class="text-sm font-medium">Parkeren</div>
            </div>
            <div class="text-center p-4 bg-gray-50 rounded-lg">
                <i data-lucide="waves" class="w-6 h-6 mx-auto mb-2 text-cyan-600"></i>
                <div class="text-sm font-medium">Zeezicht</div>
            </div>
            <div class="text-center p-4 bg-gray-50 rounded-lg">
                <i data-lucide="coffee" class="w-6 h-6 mx-auto mb-2 text-amber-600"></i>
                <div class="text-sm font-medium">Keuken</div>
            </div>
        </div>
    </div>
</div>



=== FILE: ./templates/single-accommodation-working.php ===
<?php
/**
 * Single Accommodation Template - Modulaire Shortcode Versie
 * 
 * Deze template gebruikt de nieuwe modulaire shortcodes voor een
 * professionele, onderhoudsbare en flexibele accommodatie pagina.
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

// ECHTE accommodation data ophalen (niet meer mock!)
global $zzbp_current_accommodation;

// Get API instance om accommodaties op te halen
global $zzbp_api_instance;
if (!isset($zzbp_api_instance) || !$zzbp_api_instance) {
    $zzbp_api_instance = new ZZBP_Api();
}

// Haal echte accommodaties op
$accommodations = $zzbp_api_instance->get_accommodations();
$zzbp_current_accommodation = null;

// Zoek naar 'zeezicht-suite' of neem de eerste beschikbare
foreach ($accommodations as $acc) {
    if (isset($acc['slug']) && $acc['slug'] === 'zeezicht-suite') {
        $zzbp_current_accommodation = $acc;
        break;
    }
}

// Fallback: neem de eerste accommodatie als zeezicht-suite niet gevonden
if (!$zzbp_current_accommodation && !empty($accommodations)) {
    $zzbp_current_accommodation = $accommodations[0];
}

// Als nog steeds geen data, gebruik fallback
if (!$zzbp_current_accommodation) {
    $zzbp_current_accommodation = [
        'name' => 'Geen accommodatie gevonden',
        'type' => 'apartment',
        'max_guests' => 4,
        'surface_area' => 85,
        'base_price' => 150,
        'description' => 'Kon geen echte accommodatie data ophalen van de API.',
        'primary_image' => 'https://images.unsplash.com/photo-1571896349842-33c89424de2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80',
        'amenities' => ['wifi', 'parking', 'kitchen'],
        'photos' => []
    ];
}

// Get API instance voor shortcode calls
global $zzbp_api_instance;
if (!$zzbp_api_instance) {
    $zzbp_api_instance = new ZZBP_Api();
}

// Set page title for WordPress
add_filter('wp_title', function() use ($zzbp_current_accommodation) {
    return esc_html($zzbp_current_accommodation['name']) . ' - ' . get_bloginfo('name');
});

get_header(); 

// Force load assets
wp_enqueue_style('flatpickr-css', 'https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/flatpickr.min.css');
wp_enqueue_script('flatpickr-js', 'https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/flatpickr.min.js', [], '4.6.13', true);
wp_enqueue_script('flatpickr-nl', 'https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/l10n/nl.js', ['flatpickr-js'], '4.6.13', true);
wp_enqueue_script('lucide-icons', 'https://unpkg.com/lucide@latest/dist/umd/lucide.js', [], null, true);

// Load our CSS
$css_file = plugin_dir_path(ZZBP_PLUGIN_FILE) . 'assets/css/tailwind.css';
if (file_exists($css_file)) {
    wp_enqueue_style('zzbp-main-style', plugin_dir_url(ZZBP_PLUGIN_FILE) . 'assets/css/tailwind.css', [], '10.0.0');
}
?>

<!-- Extra CSS voor grid layout -->
<style>
/* Grid classes voor photo gallery */
.grid {
    display: grid;
}

.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
}

.gap-4 {
    gap: 1rem;
}

/* Responsive grid */
@media (min-width: 768px) {
    .md\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
}

/* Sidebar sticky */
.sticky {
    position: sticky;
}

.top-6 {
    top: 1.5rem;
}

/* Flexbox utilities */
.flex {
    display: flex;
}

.flex-col {
    flex-direction: column;
}

.space-y-8 > * + * {
    margin-top: 2rem;
}

.lg\:grid {
    display: grid;
}

.lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
}

.lg\:col-span-2 {
    grid-column: span 2 / span 2;
}

.lg\:col-span-1 {
    grid-column: span 1 / span 1;
}

.lg\:gap-8 {
    gap: 2rem;
}

.lg\:items-start {
    align-items: flex-start;
}

.mt-8 {
    margin-top: 2rem;
}

.lg\:mt-0 {
    margin-top: 0;
}

/* Responsive breakpoint */
@media (min-width: 1024px) {
    .lg\:grid {
        display: grid;
    }
    
    .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    
    .lg\:col-span-2 {
        grid-column: span 2 / span 2;
    }
    
    .lg\:col-span-1 {
        grid-column: span 1 / span 1;
    }
    
    .lg\:gap-8 {
        gap: 2rem;
    }
    
    .lg\:items-start {
        align-items: flex-start;
    }
    
    .lg\:mt-0 {
        margin-top: 0;
    }
}

/* Basic Tailwind-like utilities */
.bg-white { background-color: white; }
.rounded-2xl { border-radius: 1rem; }
.p-8 { padding: 2rem; }
.p-6 { padding: 1.5rem; }
.p-4 { padding: 1rem; }
.shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
.border { border-width: 1px; }
.border-gray-100 { border-color: #f3f4f6; }
.mb-8 { margin-bottom: 2rem; }
.mb-6 { margin-bottom: 1.5rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mt-4 { margin-top: 1rem; }
.mt-6 { margin-top: 1.5rem; }

/* Text styles */
.text-2xl { font-size: 1.5rem; line-height: 2rem; }
.text-xl { font-size: 1.25rem; line-height: 1.75rem; }
.text-lg { font-size: 1.125rem; line-height: 1.75rem; }
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.font-semibold { font-weight: 600; }
.font-bold { font-weight: 700; }
.font-medium { font-weight: 500; }
.text-gray-900 { color: #111827; }
.text-gray-700 { color: #374151; }
.text-gray-600 { color: #4b5563; }
.text-gray-500 { color: #6b7280; }
.text-green-500 { color: #10b981; }
.text-rose-600 { color: #dc2626; }
.text-rose-700 { color: #b91c1c; }
.leading-relaxed { line-height: 1.625; }
.capitalize { text-transform: capitalize; }
.text-center { text-align: center; }

/* Layout utilities */
.items-center { align-items: center; }
.justify-between { justify-content: space-between; }
.space-y-4 > * + * { margin-top: 1rem; }
.space-y-2 > * + * { margin-top: 0.5rem; }
.gap-3 { gap: 0.75rem; }
.gap-2 { gap: 0.5rem; }

/* Form styles */
.w-full { width: 100%; }
.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
.border-gray-300 { border-color: #d1d5db; }
.rounded-lg { border-radius: 0.5rem; }
.focus\:ring-2:focus { outline: 2px solid transparent; outline-offset: 2px; box-shadow: 0 0 0 2px #f43f5e; }
.focus\:ring-rose-500:focus { box-shadow: 0 0 0 2px #f43f5e; }
.focus\:border-rose-500:focus { border-color: #f43f5e; }

/* Button styles */
.bg-gradient-to-br { background-image: linear-gradient(to bottom right, var(--tw-gradient-stops)); }
.from-rose-400 { --tw-gradient-from: #fb7185; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(251, 113, 133, 0)); }
.via-rose-500 { --tw-gradient-stops: var(--tw-gradient-from), #f43f5e, var(--tw-gradient-to, rgba(244, 63, 94, 0)); }
.to-rose-600 { --tw-gradient-to: #e11d48; }
.hover\:from-green-600:hover { --tw-gradient-from: #16a34a; }
.hover\:to-green-700:hover { --tw-gradient-to: #15803d; }
.text-white { color: white; }
.py-4 { padding-top: 1rem; padding-bottom: 1rem; }
.rounded-2xl { border-radius: 1rem; }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.duration-200 { transition-duration: 200ms; }
.hover\:-translate-y-0\.5:hover { transform: translateY(-0.125rem); }
.hover\:shadow-xl:hover { box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); }

/* Border styles */
.border-t { border-top-width: 1px; }
.border-gray-200 { border-color: #e5e7eb; }
.pt-4 { padding-top: 1rem; }
.pt-6 { padding-top: 1.5rem; }

/* Hover effects */
.hover\:text-rose-700:hover { color: #b91c1c; }
.cursor-pointer { cursor: pointer; }
</style>

<!-- ZeeZicht Booking Pro - Single Accommodation (Modulaire Architectuur) -->
<div class="zzbp-wrapper">
    <div id="zzbp-booking-app" class="min-h-screen bg-gray-50" style="max-width: 1920px; margin: 0 auto; padding: 0 3rem; background: #f8fafc;">

        <?php echo do_shortcode('[zzbp_hero_image]'); ?>

        <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 2rem;">
            <div style="display: flex; flex-direction: column; gap: 2rem;">
                <?php echo do_shortcode('[zzbp_property_header]'); ?>
                <?php echo do_shortcode('[zzbp_description]'); ?>
                <?php echo do_shortcode('[zzbp_amenities]'); ?>
                <?php echo do_shortcode('[zzbp_photo_gallery]'); ?>
                <?php echo do_shortcode('[zzbp_availability_calendar]'); ?>
            </div>
            
            <div>
                <?php echo do_shortcode('[zzbp_booking_sidebar]'); ?>
            </div>
        </div>

    </div>
</div>

<!-- Booking Modal - Direct Include -->
<?php
// Include modal directly to avoid shortcode escaping issues
global $zzbp_current_accommodation;
$accommodation = $zzbp_current_accommodation;
if ($accommodation):
?>
<!-- Booking Modal -->
<div id="booking-modal" style="display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.5); z-index: 9999; align-items: center; justify-content: center; padding: 1rem;">
    <div class="bg-white rounded-2xl w-full max-h-[90vh] overflow-y-auto" style="max-width: 56rem;">
        <!-- Modal Header -->
        <div class="p-6 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-bold text-gray-900">Reserveer <?php echo esc_html($accommodation['name']); ?></h2>
                <button onclick="closeBookingModal()" class="text-gray-400 hover:text-gray-600 text-2xl">&times;</button>
            </div>
            
            <!-- Progress Bar -->
            <div class="w-full bg-gray-200 rounded-full h-2 mt-4">
                <div id="progress-bar" class="bg-rose-500 h-2 rounded-full transition-all duration-500 ease-out" style="width: 25%"></div>
            </div>
        </div>
        
        <!-- Modal Content -->
        <div class="p-6">
            <form id="booking-form">
                
                <!-- Step 1: Date Selection -->
                <div id="step-1" class="booking-step">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Selecteer datums</h3>
                        <p class="text-gray-600">Wanneer wil je verblijven?</p>
                    </div>
                    
                    <!-- Selected Dates Display -->
                    <div id="modal-selected-dates" style="display: none; margin-bottom: 1rem; padding: 0.75rem; background-color: #dbeafe; border-radius: 0.5rem; border: 1px solid #93c5fd;">
                        <div style="font-size: 0.875rem; font-weight: 500; color: #1e3a8a; margin-bottom: 0.25rem;">Geselecteerde periode</div>
                        <div id="modal-period-text" style="color: #1d4ed8; font-size: 0.875rem;"></div>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 0.5rem;">
                            <span style="font-size: 0.75rem; color: #2563eb;"><span id="modal-nights">0</span> nachten</span>
                            <button type="button" id="modal-clear-selection" style="font-size: 0.75rem; color: #3b82f6; background: none; border: none; cursor: pointer;">Wissen</button>
                        </div>
                    </div>
                    
                    <!-- Full Calendar - Direct include -->
                    <div class="modal-calendar" style="margin-bottom: 1rem;">
                        <div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8">
                            <h2 class="text-2xl font-semibold text-gray-900 mb-6">Beschikbaarheid</h2>
                            
                            <!-- Calendar Container -->
                            <div class="accommodation-calendar">
                                <div id="modal-accommodation-calendar-<?php echo esc_attr($accommodation['id'] ?? 'demo'); ?>"></div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Hidden inputs for form data -->
                    <input type="hidden" id="modal-checkin" name="checkin">
                    <input type="hidden" id="modal-checkout" name="checkout">
                </div>
                
                <!-- Step 2: Guest Selection -->
                <div id="step-2" class="booking-step hidden">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Kies gasten</h3>
                        <p class="text-gray-600">Hoeveel gasten verblijven er?</p>
                    </div>
                    
                    <div class="space-y-4">
                        <div class="flex items-center justify-between py-4">
                            <div>
                                <p class="font-medium">Volwassenen</p>
                                <p class="text-sm text-gray-500">13 jaar en ouder</p>
                            </div>
                            <div class="flex items-center gap-3">
                                <button type="button" onclick="updateGuestCount('adults', false)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">−</span>
                                </button>
                                <span id="adults-count" class="w-8 text-center font-medium">2</span>
                                <button type="button" onclick="updateGuestCount('adults', true)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">+</span>
                                </button>
                            </div>
                        </div>
                        
                        <div class="border-t border-gray-200"></div>
                        
                        <div class="flex items-center justify-between py-4">
                            <div>
                                <p class="font-medium">Kinderen</p>
                                <p class="text-sm text-gray-500">2-12 jaar</p>
                            </div>
                            <div class="flex items-center gap-3">
                                <button type="button" onclick="updateGuestCount('children', false)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">−</span>
                                </button>
                                <span id="children-count" class="w-8 text-center font-medium">0</span>
                                <button type="button" onclick="updateGuestCount('children', true)" 
                                        class="w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50">
                                    <span class="text-lg">+</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Step 3: Contact Details -->
                <div id="step-3" class="booking-step hidden">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Jouw gegevens</h3>
                        <p class="text-gray-600">We hebben wat gegevens nodig om je reservering te voltooien</p>
                    </div>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Volledige naam</label>
                            <input type="text" id="guest-name" name="name" required
                                   class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                                   placeholder="Voer je volledige naam in">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">E-mailadres</label>
                            <input type="email" id="guest-email" name="email" required
                                   class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                                   placeholder="Voer je e-mailadres in">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Telefoonnummer</label>
                            <input type="tel" id="guest-phone" name="phone" required
                                   class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rose-500 focus:border-rose-500"
                                   placeholder="Voer je telefoonnummer in">
                        </div>
                    </div>
                </div>
                
                <!-- Step 4: Confirmation -->
                <div id="step-4" class="booking-step hidden">
                    <div class="text-center space-y-2 mb-6">
                        <h3 class="text-xl font-semibold">Bevestig reservering</h3>
                        <p class="text-gray-600">Controleer je reserveringsgegevens</p>
                    </div>
                    
                    <div class="bg-gray-50 rounded-lg p-6 space-y-4">
                        <div class="flex justify-between">
                            <span>Datums</span>
                            <span id="confirm-dates" class="font-medium"></span>
                        </div>
                        <div class="flex justify-between">
                            <span>Gasten</span>
                            <span id="confirm-guests" class="font-medium"></span>
                        </div>
                        
                        <div class="border-t border-gray-300 pt-4"></div>
                        
                        <div class="space-y-2">
                            <div class="flex justify-between">
                                <span>€<?php echo number_format($accommodation['base_price'] ?? 150, 0); ?> × <span id="confirm-nights">0</span> nachten</span>
                                <span id="confirm-subtotal">€0</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Schoonmaakkosten</span>
                                <span>€25</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Servicekosten</span>
                                <span id="confirm-service-fee">€0</span>
                            </div>
                        </div>
                        
                        <div class="border-t border-gray-300 pt-4"></div>
                        
                        <div class="flex justify-between font-semibold text-lg">
                            <span>Totaal</span>
                            <span id="confirm-total">€25</span>
                        </div>
                    </div>
                </div>
                
            </form>
        </div>
        
        <!-- Modal Footer -->
        <div class="p-6 border-t border-gray-200">
            <div class="flex justify-between">
                <button type="button" id="prev-btn" onclick="prevStep()" 
                        class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed">
                    <span>←</span> Terug
                </button>
                
                <button type="button" id="next-btn" onclick="nextStep()" 
                        class="px-6 py-3 bg-gradient-to-r from-rose-500 to-rose-600 text-white rounded-lg hover:from-rose-600 hover:to-rose-700 flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed">
                    Volgende <span>→</span>
                </button>
                
                <button type="button" id="submit-btn" onclick="submitBooking()" 
                        class="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 hidden">
                    Bevestig Reservering
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal JavaScript -->
<script>
let currentModalStep = 1;
let modalData = {
    adults: 2,
    children: 0,
    basePrice: <?php echo intval($accommodation['base_price'] ?? 150); ?>
};

// Modal functions will be defined later to avoid duplication

function closeBookingModal() {
    const modal = document.getElementById('booking-modal');
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
    currentModalStep = 1;
    showStep(1);
}

function showStep(step) {
    // Hide all steps
    document.querySelectorAll('.booking-step').forEach(el => el.style.display = 'none');
    
    // Show current step
    document.getElementById('step-' + step).style.display = 'block';
    
    // Update progress bar
    const progress = (step / 4) * 100;
    document.getElementById('progress-bar').style.width = progress + '%';
    
    // Update buttons
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const submitBtn = document.getElementById('submit-btn');
    
    prevBtn.disabled = step === 1;
    
    if (step === 4) {
        nextBtn.style.display = 'none';
        submitBtn.style.display = 'block';
        updateConfirmation();
    } else {
        nextBtn.style.display = 'block';
        submitBtn.style.display = 'none';
    }
}

function nextStep() {
    if (validateCurrentStep()) {
        currentModalStep++;
        showStep(currentModalStep);
    }
}

function prevStep() {
    if (currentModalStep > 1) {
        currentModalStep--;
        showStep(currentModalStep);
    }
}

function validateCurrentStep() {
    if (currentModalStep === 1) {
        const checkIn = document.getElementById('modal-checkin').value;
        const checkOut = document.getElementById('modal-checkout').value;
        if (!checkIn || !checkOut) {
            alert('Selecteer eerst een periode in de kalender');
            return false;
        }
    } else if (currentModalStep === 3) {
        const name = document.getElementById('guest-name').value.trim();
        const email = document.getElementById('guest-email').value.trim();
        const phone = document.getElementById('guest-phone').value.trim();
        
        if (!name || !email || !phone) {
            alert('Vul alle velden in');
            return false;
        }
        
        if (!email.includes('@')) {
            alert('Voer een geldig e-mailadres in');
            return false;
        }
    }
    return true;
}

function updateGuestCount(type, increment) {
    const currentValue = modalData[type];
    let newValue;
    
    if (increment) {
        newValue = Math.min(currentValue + 1, 8);
    } else {
        newValue = Math.max(type === 'adults' ? 1 : 0, currentValue - 1);
    }
    
    modalData[type] = newValue;
    document.getElementById(type + '-count').textContent = newValue;
}

function updateConfirmation() {
    const checkIn = document.getElementById('modal-checkin').value;
    const checkOut = document.getElementById('modal-checkout').value;
    
    if (checkIn && checkOut) {
        const checkInDate = new Date(checkIn);
        const checkOutDate = new Date(checkOut);
        const nights = Math.ceil((checkOutDate - checkInDate) / (1000 * 60 * 60 * 24));
        
        // Format dates for display
        const checkInDisplay = formatDateForDisplay(checkInDate);
        const checkOutDisplay = formatDateForDisplay(checkOutDate);
        
        document.getElementById('confirm-dates').textContent = checkInDisplay + ' - ' + checkOutDisplay;
        document.getElementById('confirm-guests').textContent = 
            modalData.adults + ' volwassenen' + (modalData.children > 0 ? ', ' + modalData.children + ' kinderen' : '');
        document.getElementById('confirm-nights').textContent = nights;
        
        const subtotal = nights * modalData.basePrice;
        const serviceFee = Math.round(subtotal * 0.08);
        const total = subtotal + 25 + serviceFee;
        
        document.getElementById('confirm-subtotal').textContent = '€' + subtotal;
        document.getElementById('confirm-service-fee').textContent = '€' + serviceFee;
        document.getElementById('confirm-total').textContent = '€' + total;
    }
}

function submitBooking() {
    const formData = {
        accommodation: '<?php echo esc_js($accommodation['name']); ?>',
        checkIn: document.getElementById('modal-checkin').value,
        checkOut: document.getElementById('modal-checkout').value,
        adults: modalData.adults,
        children: modalData.children,
        name: document.getElementById('guest-name').value,
        email: document.getElementById('guest-email').value,
        phone: document.getElementById('guest-phone').value
    };
    
    alert('Reservering ingediend!\n\nWe sturen je binnenkort een bevestigingsmail.\n\nGegevens:\n' + 
          'Naam: ' + formData.name + '\n' +
          'E-mail: ' + formData.email + '\n' +
          'Periode: ' + formData.checkIn + ' - ' + formData.checkOut + '\n' +
          'Gasten: ' + formData.adults + ' volwassenen, ' + formData.children + ' kinderen');
    
    closeBookingModal();
}

// Helper functions
function formatDateForDisplay(date) {
    return date.toLocaleDateString('nl-NL');
}

function parseDisplayDate(dateStr) {
    const parts = dateStr.split('-');
    return new Date(parts[2], parts[1] - 1, parts[0]);
}

// Initialize modal
document.addEventListener('DOMContentLoaded', function() {
    console.log('Initializing booking modal...');
    showStep(1);
    
    // Multiple attempts to initialize calendar
    function tryInitCalendar(attempts = 0) {
        if (window.flatpickr) {
            initModalDatePickers();
        } else if (attempts < 10) {
            setTimeout(() => tryInitCalendar(attempts + 1), 200);
        }
    }
    
    tryInitCalendar();
});

// Modal functions
function openBookingModal() {
    console.log('Opening booking modal...');
    const modal = document.getElementById('booking-modal');
    modal.style.display = 'flex';
    document.body.style.overflow = 'hidden';
    
    // Pre-fill dates from sidebar if available
    const sidebarCheckIn = document.getElementById('check-in-date');
    const sidebarCheckOut = document.getElementById('check-out-date');
    
    if (sidebarCheckIn && sidebarCheckIn.value && sidebarCheckOut && sidebarCheckOut.value) {
        // Set hidden inputs
        const modalCheckIn = document.getElementById('modal-checkin');
        const modalCheckOut = document.getElementById('modal-checkout');
        
        if (modalCheckIn && modalCheckOut) {
            modalCheckIn.value = sidebarCheckIn.value;
            modalCheckOut.value = sidebarCheckOut.value;
        }
        
        // Set calendar dates if calendar is initialized
        if (window.modalCalendarInstance) {
            const checkInDate = new Date(sidebarCheckIn.value);
            const checkOutDate = new Date(sidebarCheckOut.value);
            window.modalCalendarInstance.setDate([checkInDate, checkOutDate], false);
        }
    }
    
    // Ensure calendar is initialized when modal opens
    setTimeout(function() {
        if (!window.modalCalendarInstance && window.flatpickr) {
            console.log('Initializing calendar on modal open...');
            initModalDatePickers();
        }
    }, 100);
}

function initModalDatePickers() {
    const accommodationId = '<?php echo esc_js($accommodation['id'] ?? 'demo'); ?>';
    const calendarContainer = document.getElementById('modal-accommodation-calendar-' + accommodationId);
    
    if (!calendarContainer) {
        console.log('Modal calendar container not found, retrying...');
        // Retry after a short delay
        setTimeout(initModalDatePickers, 200);
        return;
    }
    
    if (calendarContainer.hasAttribute('data-initialized')) {
        console.log('Modal calendar already initialized');
        return;
    }
    
    console.log('Initializing modal calendar...');
    calendarContainer.setAttribute('data-initialized', 'true');
    
    // Mock availability data - same as main calendar
    const availabilityData = {
        unavailable_dates: [
            '2024-12-25', '2024-12-26', '2024-12-31', '2025-01-01',
            '2025-01-15', '2025-01-16', '2025-01-17'
        ]
    };

    calendarContainer.innerHTML = `
        <!-- Selected Dates Display -->
        <div id="modal-selected-dates-display" class="hidden mb-4 p-3 bg-blue-50 rounded-lg border border-blue-200">
            <div class="text-sm font-medium text-blue-900 mb-1">Geselecteerde periode</div>
            <div id="modal-selected-period-text" class="text-blue-700 text-sm"></div>
            <div class="flex justify-between items-center mt-2">
                <span class="text-xs text-blue-600"><span id="modal-selected-nights">0</span> nachten</span>
                <button id="modal-clear-btn" class="text-xs text-blue-500 hover:text-blue-700">Wissen</button>
            </div>
        </div>

        <!-- Calendar Container -->
        <div id="modal-calendar-flatpickr" class="border border-gray-200 rounded-lg overflow-hidden"></div>

        <!-- Legend -->
        <div class="mt-4 flex flex-wrap gap-4 text-sm">
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 rounded" style="background-color: #22C55E;"></div>
                <span class="text-gray-700 font-medium">Beschikbaar</span>
            </div>
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 rounded" style="background-color: #E5C5C5;"></div>
                <span class="text-gray-700 font-medium">Bezet</span>
            </div>
            <div class="flex items-center gap-2">
                <div class="w-4 h-4 rounded" style="background-color: #3B82F6;"></div>
                <span class="text-gray-700 font-medium">Geselecteerd</span>
            </div>
        </div>
    `;

    // Wait a moment for HTML to be fully rendered
    setTimeout(function() {
        // Initialize Flatpickr
        const flatpickrContainer = calendarContainer.querySelector('#modal-calendar-flatpickr');
        const selectedDisplay = calendarContainer.querySelector('#modal-selected-dates-display');
        const periodText = calendarContainer.querySelector('#modal-selected-period-text');
        const nightsSpan = calendarContainer.querySelector('#modal-selected-nights');
        const clearBtn = calendarContainer.querySelector('#modal-clear-btn');

        if (!flatpickrContainer) {
            console.error('Flatpickr container not found in modal');
            return;
        }

        let selectedDates = [];
        const unavailableDates = availabilityData.unavailable_dates || [];

        // Initialize Flatpickr
        const fp = window.flatpickr(flatpickrContainer, {
            mode: 'range',
            inline: true,
            dateFormat: 'Y-m-d',
            minDate: 'today',
            maxDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000),
            disable: unavailableDates.map(dateStr => new Date(dateStr)),
            locale: 'nl',
            showMonths: window.innerWidth >= 768 ? 2 : 1,
            onChange: function(dates) {
                handleModalDateSelection(dates);
            },
            onDayCreate: function(dObj, dStr, fp, dayElem) {
                const date = dayElem.dateObj;
                const today = new Date();
                today.setHours(0, 0, 0, 0);

                if (date < today) {
                    dayElem.classList.add('past-date');
                }
            }
        });

        // Store calendar instance globally
        window.modalCalendarInstance = fp;
        console.log('Modal calendar initialized successfully');

        // Clear selection button
        clearBtn.addEventListener('click', function() {
            fp.clear();
        });
    }, 50); // Small delay to ensure HTML is rendered

    // Handle date selection in modal
    function handleModalDateSelection(selectedDates) {
        const selectedDisplay = document.getElementById('modal-selected-dates');
        const periodText = document.getElementById('modal-period-text');
        const nightsSpan = document.getElementById('modal-nights');
        const checkInHidden = document.getElementById('modal-checkin');
        const checkOutHidden = document.getElementById('modal-checkout');

        if (selectedDates.length === 0) {
            selectedDisplay.style.display = 'none';
            checkInHidden.value = '';
            checkOutHidden.value = '';
            return;
        }

        if (selectedDates.length === 1) {
            selectedDisplay.style.display = 'block';
            periodText.textContent = `Startdatum: ${formatDateForDisplay(selectedDates[0])}`;
            nightsSpan.textContent = '0';
            checkInHidden.value = formatDateForInput(selectedDates[0]);
            checkOutHidden.value = '';
            return;
        }

        if (selectedDates.length === 2) {
            const [startDate, endDate] = selectedDates;
            const nights = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));

            selectedDisplay.style.display = 'block';
            periodText.textContent = `${formatDateForDisplay(startDate)} - ${formatDateForDisplay(endDate)}`;
            nightsSpan.textContent = nights;
            
            checkInHidden.value = formatDateForInput(startDate);
            checkOutHidden.value = formatDateForInput(endDate);
            
            // Also update sidebar if it exists
            const sidebarCheckIn = document.getElementById('check-in-date');
            const sidebarCheckOut = document.getElementById('check-out-date');
            if (sidebarCheckIn && sidebarCheckOut) {
                sidebarCheckIn.value = formatDateForInput(startDate);
                sidebarCheckOut.value = formatDateForInput(endDate);
                
                // Update sidebar range picker if it exists
                if (window.sidebarRangePicker) {
                    window.sidebarRangePicker.setDate([startDate, endDate], false);
                }
            }
        }
    }

    // Clear selection button
    document.getElementById('modal-clear-selection').addEventListener('click', function() {
        if (window.modalCalendarInstance) {
            window.modalCalendarInstance.clear();
        }
    });

    // Helper function for input format (YYYY-MM-DD)
    function formatDateForInput(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}-${month}-${day}`;
    }
}

// Make functions globally accessible
window.openBookingModal = openBookingModal;
window.closeBookingModal = closeBookingModal;
window.nextStep = nextStep;
window.prevStep = prevStep;
window.updateGuestCount = updateGuestCount;
window.submitBooking = submitBooking;
</script>

<!-- Modal Styles -->
<style>
.booking-step {
    min-height: 400px;
}

#booking-modal {
    backdrop-filter: blur(4px);
}

/* Modal Calendar Styles - reuse existing styles */
.modal-calendar .accommodation-calendar .flatpickr-calendar.inline {
    box-shadow: none !important;
    border: 0 !important;
    background: transparent !important;
    width: 100% !important;
}

.modal-calendar .accommodation-calendar .flatpickr-months {
    background: #f9fafb !important;
    border-radius: 0.75rem 0.75rem 0 0 !important;
    padding: 1rem !important;
}

.modal-calendar .accommodation-calendar .flatpickr-weekdays {
    background: #f3f4f6 !important;
    padding: 0.5rem 0 !important;
}

/* Modern square days with rounded corners */
.modal-calendar .accommodation-calendar .flatpickr-day {
    width: 40px !important;
    height: 40px !important;
    line-height: 40px !important;
    border-radius: 6px !important;
    margin: 2px !important;
    transition: all 0.2s ease !important;
}

/* Available dates - green background - but NOT if selected */
.modal-calendar .accommodation-calendar .flatpickr-day:not(.flatpickr-disabled):not(.prevMonthDay):not(.nextMonthDay):not(.selected):not(.startRange):not(.endRange):not(.inRange) {
    background-color: #22C55E !important;
    color: white !important;
    border-color: #16A34A !important;
}

/* Available dates hover - but NOT if selected */
.modal-calendar .accommodation-calendar .flatpickr-day:not(.flatpickr-disabled):not(.prevMonthDay):not(.nextMonthDay):not(.selected):not(.startRange):not(.endRange):not(.inRange):hover {
    background-color: #16A34A !important;
    color: white !important;
    transform: scale(1.05) !important;
}

/* Disabled dates (unavailable) - dusty rose */
.modal-calendar .accommodation-calendar .flatpickr-day.flatpickr-disabled {
    background-color: #E5C5C5 !important;
    color: #8B5A5A !important;
    opacity: 1 !important;
    cursor: not-allowed !important;
}

/* Past dates - greyed out (higher priority than disabled) */
.modal-calendar .accommodation-calendar .flatpickr-day.past-date {
    background-color: #F3F4F6 !important;
    color: #9CA3AF !important;
    opacity: 0.6 !important;
    cursor: not-allowed !important;
}

/* Selection overrides green - blue for selected dates (highest priority) */
.modal-calendar .accommodation-calendar .flatpickr-day.selected,
.modal-calendar .accommodation-calendar .flatpickr-day.startRange,
.modal-calendar .accommodation-calendar .flatpickr-day.endRange {
    background-color: #3B82F6 !important;
    border-color: #3B82F6 !important;
    color: white !important;
    transform: scale(1.05) !important;
}

/* Selected dates hover - stay blue */
.modal-calendar .accommodation-calendar .flatpickr-day.selected:hover,
.modal-calendar .accommodation-calendar .flatpickr-day.startRange:hover,
.modal-calendar .accommodation-calendar .flatpickr-day.endRange:hover {
    background-color: #2563EB !important;
    border-color: #2563EB !important;
    color: white !important;
    transform: scale(1.05) !important;
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3) !important;
}

.modal-calendar .accommodation-calendar .flatpickr-day.inRange {
    background-color: #DBEAFE !important;
    border-color: #BFDBFE !important;
    color: #1E40AF !important;
    transform: none !important;
}

/* In-range hover - stay light blue */
.modal-calendar .accommodation-calendar .flatpickr-day.inRange:hover {
    background-color: #BFDBFE !important;
    border-color: #93C5FD !important;
    color: #1E40AF !important;
    transform: scale(1.02) !important;
}

/* Toon volgende maand dagen */
.modal-calendar .accommodation-calendar .flatpickr-day.nextMonthDay,
.modal-calendar .accommodation-calendar .flatpickr-day.prevMonthDay {
    display: block !important;
    visibility: visible !important;
    opacity: 0.4 !important;
    color: #9CA3AF !important;
    background-color: #F9FAFB !important;
}

/* Responsive modal sizing */
@media (max-width: 768px) {
    #booking-modal > div {
        max-width: 95% !important;
        margin: 0.5rem !important;
    }
}

/* Ensure proper styling */
.bg-white { background-color: white; }
.rounded-2xl { border-radius: 1rem; }
.max-w-2xl { max-width: 42rem; }
.w-full { width: 100%; }
.p-6 { padding: 1.5rem; }
.border-b { border-bottom-width: 1px; }
.border-gray-200 { border-color: #e5e7eb; }
.flex { display: flex; }
.justify-between { justify-content: space-between; }
.items-center { align-items: center; }
.text-2xl { font-size: 1.5rem; }
.font-bold { font-weight: 700; }
.text-gray-900 { color: #111827; }
.bg-gray-200 { background-color: #e5e7eb; }
.rounded-full { border-radius: 9999px; }
.h-2 { height: 0.5rem; }
.mt-4 { margin-top: 1rem; }
.bg-rose-500 { background-color: #f43f5e; }
.transition-all { transition-property: all; }
.duration-500 { transition-duration: 500ms; }
.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }
</style>
<?php endif; ?>

<?php get_footer(); ?>



=== FILE: ./zee-zicht-booking-pro.php ===
<?php
/**
 * Plugin Name: ZeeZicht Booking Pro
 * Plugin URI: https://zee-zicht.nl
 * Description: Professional booking management plugin with modular architecture
 * Version: 2.0.0
 * Author: ZeeZicht Media
 * License: GPL v2 or later
 * Text Domain: zee-zicht-booking-pro
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

// Define plugin constants
define('ZZBP_PLUGIN_FILE', __FILE__);
define('ZZBP_PLUGIN_PATH', plugin_dir_path(__FILE__));
define('ZZBP_PLUGIN_URL', plugin_dir_url(__FILE__));
define('ZZBP_VERSION', '2.0.0');

/**
 * Main Plugin Class - CLEAN BOOTSTRAPPER
 */
class ZeeZichtBookingPro_Clean {
    
    /**
     * Plugin instances
     */
    private $admin;
    private $ajax;
    private $api;
    private $assets;
    private $routing;
    private $shortcodes;
    
    /**
     * Initialize the plugin
     */
    public function __construct() {
        add_action('plugins_loaded', array($this, 'init'));
    }
    
    /**
     * Initialize all plugin components
     */
    public function init() {
        $this->load_dependencies();
        $this->init_components();
    }
    
    /**
     * Load all required files
     */
    private function load_dependencies() {
        require_once ZZBP_PLUGIN_PATH . 'includes/class-zzbp-admin.php';
        require_once ZZBP_PLUGIN_PATH . 'includes/class-zzbp-ajax.php';
        require_once ZZBP_PLUGIN_PATH . 'includes/class-zzbp-api.php';
        require_once ZZBP_PLUGIN_PATH . 'includes/class-zzbp-assets.php';
        require_once ZZBP_PLUGIN_PATH . 'includes/class-zzbp-routing.php';
        require_once ZZBP_PLUGIN_PATH . 'includes/class-zzbp-shortcodes.php';
    }
    
    /**
     * Initialize all components
     */
    private function init_components() {
        // Initialize in correct order
        $this->api = new ZZBP_Api();
        $this->assets = new ZZBP_Assets();
        $this->shortcodes = new ZZBP_Shortcodes();
        $this->routing = new ZZBP_Routing();
        $this->ajax = new ZZBP_Ajax();
        
        // Admin only in admin area
        if (is_admin()) {
            $this->admin = new ZZBP_Admin();
        }
    }
    
    /**
     * Get API instance
     */
    public function get_api() {
        return $this->api;
    }
    
    /**
     * Get accommodations (cached)
     */
    public function get_accommodations() {
        return $this->api->get_accommodations();
    }
}

/**
 * Initialize the plugin
 */
function zzbp_clean_init() {
    return new ZeeZichtBookingPro_Clean();
}

// Start the plugin
zzbp_clean_init();

/**
 * Activation hook
 */
register_activation_hook(__FILE__, 'zzbp_clean_activate');
function zzbp_clean_activate() {
    // Initialize routing to add rewrite rules
    $routing = new ZZBP_Routing();
    $routing->add_rewrite_rules();
    
    // Flush rewrite rules
    flush_rewrite_rules();
}

/**
 * Deactivation hook
 */
register_deactivation_hook(__FILE__, 'zzbp_clean_deactivate');
function zzbp_clean_deactivate() {
    flush_rewrite_rules();
}



